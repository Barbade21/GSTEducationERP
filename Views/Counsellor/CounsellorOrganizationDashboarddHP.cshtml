@model GSTEducationERPLibrary.Counsellor.Counsellor
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Enquiry vs Admitted Students</title>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <link href="~/Content/plugins/bootstrap-switch/css/bootstrap3/bootstrap-switch.min.css" rel="stylesheet" />
    <script src="~/Content/plugins/jquery/jquery.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/bootstrap/js/bootstrap.bundle.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
    <link rel="stylesheet" href="~/Content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/Content/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/Content/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="~/Content/plugins/datatables/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-responsive/js/dataTables.responsive.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-responsive/js/responsive.bootstrap4.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-buttons/js/dataTables.buttons.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-buttons/js/buttons.bootstrap4.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/jszip/jszip.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/pdfmake/pdfmake.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/pdfmake/vfs_fonts.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-buttons/js/buttons.html5.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-buttons/js/buttons.print.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-buttons/js/buttons.colVis.min.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>

        .dataTables_wrapper .btn-secondary {
            color: #235;
            background-color: transparent !important;
            border-color: transparent;
            font-size: x-large;
            margin: 0px !important;
            /* border: 2px solid black;*/
        }

        h2 {
            padding-top: 10px;
            margin-bottom: 10px;
            font-family: Verdana;
            font-weight: bold;
            font-size: medium;
            color: #33CCCC;
        }

        .card-primary.card-outline-tabs > .card-header a.active {
            border-top: 3px solid #33CCCC;
        }

        a {
            color: #33CCCC;
        }

        .card.card-outline-tabs .card-header a:hover {
            color: #33CCCC;
        }

        .card-primary.card-outline-tabs > .card-header a.active, .card-primary.card-outline-tabs > .card-header a.active:hover {
            border-top: 3px solid #33CCCC;
        }

        .card-body {
            font-family: Calibri !important;
            padding-bottom: 0px !important;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        th {
            background-color: #33CCCC;
            color: #000;
            text-align: center !important;
        }

        td {
            text-align: center;
            color: black !important;
            border: 2px black;
        }

        .table td {
            padding: 0px 0px 0px 0px !important;
            font-size: 14px !important;
        }

        .table th {
            padding: 5px 5px 4px 10px !important;
            font-size: 14px !important;
        }

        table.dataTable > thead .sorting:after, table.dataTable > thead .sorting:before {
            font-size: xx-small !important;
        }

        div.dataTables_wrapper div.dataTables_filter {
            margin-top: -10px !important;
        }

        div.dt-buttons {
            margin-top: -20px !important;
        }

        .btn-group > .btn:not(:last-child):not(.dropdown-toggle), .btn-group > .btn-group:not(:last-child) > .btn {
            padding-left: 5px !important;
            padding-right: 5px !important;
        }

        div.dataTables_wrapper div.dataTables_filter label {
            font-size: small !important;
        }

        div.dataTables_wrapper div.dataTables_filter input {
            height: 20px !important;
        }

        div.dataTables_wrapper div.dataTables_info {
            padding: 0px !important;
            font-size: small !important;
        }

        div.dataTables_wrapper div.dataTables_paginate ul.pagination {
            margin-top: 0px !important;
        }

        div.dataTables_wrapper div.dataTables_paginate {
            font-size: small !important;
        }

        #BillingCount {
            align-items: center;
            justify-content: center !important;
            margin: 1.5%;
            font-size: 30px;
            color: #f4f4f4;
            font-weight: bold;
            vertical-align: middle;
        }
    </style>
</head>
<body>

    <div class="card">
        <div class="card-header">
            <div class="card-body" style="padding-top:10px">
                <div class="container" style="margin-left:-10px">
                    <style>
                        .small-box {
                            transition: box-shadow 0.3s ease-in-out, transform 0.3s ease-in-out, background-color 0.3s ease-in-out;
                        }

                            .small-box:hover {
                                box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
                                transform: scale(1.05);
                                background-color: white;
                                color: white;
                            }

                                .small-box:hover .inner p,
                                .small-box:hover .inner span {
                                    color: white;
                                }

                        .small-box {
                            position: relative;
                            display: block;
                            box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
                            margin-bottom: 20px;
                        }

                        .inner {
                            padding: 10px;
                        }

                        .bg-success {
                            background-color: #28a745 !important;
                            color: white;
                        }

                        .counter {
                            display: flex;
                            align-items: center;
                            align-content: center !important;
                            justify-content: center !important;
                            margin: 1.5%;
                            font-size: 30px;
                            background-color: #f4f4f4;
                            color: #499f68;
                            width: 50px;
                            border-radius: 50%;
                            font-weight: bold;
                            vertical-align: middle;
                        }
                    </style>


                    <div>
                        <div class="" row ml-4 mr-3">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="card" style="width:76vw;">
                                        <div class="form-group">
                                            <div class="card-body">
                                                <section class="content" style="color:white;">
                                                    <div class="container-fluid">
                                                        <div class="row">
                                                            <div class="col-lg-3 col-6">
                                                                <!-- small box -->
                                                                <div class="small-box bg-success" style="height:149px;">
                                                                    <div class="inner">
                                                                        <p><i class="fas fa-users" style="font-size: 24px;"></i> Daily Enquiry</p>
                                                                        <a class="DailyEnquiry" href="#" data-url="@Url.Action("TodayEnquiryListAsyncHP", "Counsellor" )" id="DailyEnquiry" data-toggle="modal" data-text="Daily Enquiry List" data-target="#EditLeaveModal" title="List">
                                                                            <div class="counter" id="todayCount" data-countto="@Html.ViewBag.todayCount" data-duration="2000">0</div>
                                                                        </a>
                                                                    </div>
                                                                </div>

                                                            </div>

                                                            <div class="col-lg-3 col-6">
                                                                <!-- small box -->
                                                                <div class="small-box bg-warning" style="height:149px;">
                                                                    <div class="inner">
                                                                        <div class="row">
                                                                            <div class="container">
                                                                                <p><i class="fas fa-user" style="font-size: 24px;"></i> Monthly Lead </p>

                                                                                <a class="Leads" href="#" style="display: flex;" data-url="@Url.Action("LeadCandidateListAsyncHP","Counsellor")" id="Leads" data-toggle="modal" data-text="Monthly Leads List" data-target="#EditLeaveModal" title="List">
                                                                                    <div class="counter" id="monthlylead" data-countto="@Html.ViewBag.monthlylead" data-duration="2000">0</div>
                                                                                </a>
                                                                                <img src="~/Content/Admin/icon/arrow-right.png" style=" margin-left: 6vw; margin-top: -5vw;" width=50 title="Lead to Enquiry Convert" />

                                                                                <a class="LeadsToEnquiry" href="#" data-url="@Url.Action("LeadToEnqCandidateListAsyncVP","Counsellor")" id="LeadsToEnquiry" data-toggle="modal" data-text="Monthly Leads to Enquiry List" data-target="#EditLeaveModal" title="List">
                                                                                    <div class="counter" style=" margin-left: 12vw; margin-top: -5vw; " id="" data-countto="@Html.ViewBag.monthlyleadtoenqCount" title="Monthly lead to enquiry count" data-duration="2000">0</div>
                                                                                </a>
                                                                                <div class="row mt-1" style="color:white;">
                                                                                    <!-- Second Row with Two Columns -->
                                                                                    <div class="col-6">
                                                                                        <span class="count" id="CourseLeadsCount">Course :  <span style="font-weight: bold; font-size: 24px;"> @ViewBag.CourseLeadsCount</span>
                                                                                    </div>
                                                                                    <div class="col-7" style="top:-37px;left:7vw;">
                                                                                        <span class="count" id="PlacementLeadsCount">Placement : <span style="font-weight: bold; font-size: 24px;"> @ViewBag.PlacementLeadsCount</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="col-lg-3 col-6">
                                                                <!-- small box -->
                                                                <div class="small-box bg-info" style="height:149px;">
                                                                    <div class="inner">
                                                                        <div class="row">
                                                                            <!-- First Row with One Column -->
                                                                            <div class="container">

                                                                                <p><i class="fas fa-user" style="font-size: 24px;"></i> Monthly Enquiry</p>
                                                                                <a class="MonthlyEnq" href="#" data-url="@Url.Action("EnquiryCandidatetListAsyncHP","Counsellor")" id="MonthlyEnq" data-toggle="modal" data-text="Monthly Enquiry List" data-target="#EditLeaveModal" title="List">
                                                                                    <div class="counter" id="" data-countto="@Html.ViewBag.monthlyCount" data-duration="2000">0</div>
                                                                                </a>
                                                                                @*<p><i class='nav-icon fa fa-user' style='font-size:24px'></i> Monthly Enquiry : <span style="font-weight: bold; font-size: 24px;"> @Html.ViewBag.monthlyCount</p>*@

                                                                                <div class="row mt-1">

                                                                                    <!-- Second Row with Two Columns -->
                                                                                    <div class="col-6">
                                                                                        <span class="count" id="CourseEnquiryCount">Course : <span style="font-weight: bold; font-size: 24px;"> @ViewBag.CourseEnquiryCount</span>
                                                                                    </div>
                                                                                    <div class="col-7" style="top:-37px;left:7vw;">
                                                                                        <span class="count" id="PlacementEnquiryCount">Placement : <span style="font-weight: bold; font-size: 24px;"> @ViewBag.PlacementEnquiryCount</span>
                                                                                    </div>

                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="col-lg-3 col-6">
                                                                <!--small box-->
                                                                <div class="small-box bg-gradient-teal" style="height:149px;">
                                                                    <div class="inner">
                                                                        <p><i class="fas fa-user" style="font-size: 24px;"></i>  Monthly Lost Enquiry</p>
                                                                        <a class="lostEnquiry" href="#" data-url="@Url.Action("LostCandidateListAsyncHP","Counsellor")" id="lostEnquiry" data-toggle="modal" data-text="Lost Enquiry List" data-target="#EditLeaveModal" title="List">
                                                                            <div class="counter" id="" data-countto="@Html.ViewBag.LostEnquiry" data-duration="2000">0</div>
                                                                        </a>

                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-3 col-6" @*style="margin-left:150px;"*@>

                                                                <!--small box-->
                                                                <div class="small-box bg-gradient-maroon" style="height:149px;">
                                                                    <div class="inner">
                                                                        <p><i class="fas fa-user" style="font-size: 24px;"></i>  Enquiry Form Pending</p>
                                                                        <a class="EnqFormPending" href="#" data-url="@Url.Action("EnquiryFormPendingListAsyncHP","Counsellor")" id="EnqFormPending" data-toggle="modal" data-text=" Enquiry Form Pending List" data-target="#EditLeaveModal" title="List">

                                                                            <div class="counter" id="" data-countto="@Html.ViewBag.EnquiryFormPending" data-duration="2000">0</div>
                                                                        </a>

                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-lg-3 col-6" @*style="margin-left:150px;"*@>

                                                                <!--small box-->
                                                                <div class="small-box bg-gradient-navy" style="height:149px;">
                                                                    <div class="inner">
                                                                        <p><i class="fas fa-user" style="font-size: 24px;"></i>  Monthly Hold Enquiry</p>
                                                                        <a class="PendingEnquiry" href="#" data-url="@Url.Action("PendingCandidateListAsyncHP","Counsellor")" id="PendingEnquiry" data-toggle="modal" data-text="Pending and Hold  Enquiry List" data-target="#EditLeaveModal" title="List">
                                                                            <div class="counter" id="pendingenq" data-countto="@Html.ViewBag.PenholdEnquiry" data-duration="2000">0</div>
                                                                        </a>
                                                                        <div class="row mt-1" style="color:white;">
                                                                            <!-- Second Row with Two Columns -->
                                                                            <div class="col-6">
                                                                                <span class="count" id="Pending">Pending : <span style="font-weight: bold; font-size: 24px;"> @ViewBag.PendingEnquiry</span>
                                                                            </div>
                                                                            <div class="col-6">
                                                                                <span class="count" id="Hold">Hold : <span style="font-weight: bold; font-size: 24px;"> @ViewBag.HoldEnquiry</span>
                                                                            </div>
                                                                        </div>

                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="col-lg-3 col-6">
                                                                <!-- small box -->
                                                                <div class="small-box bg-gradient-orange" style="height:149px;">
                                                                    <div class="inner">
                                                                        <div class="row">
                                                                            <!-- First Row with One Column -->
                                                                            <div class="col-12">
                                                                                <p><i class="fas fa-user" style="font-size: 24px;"></i>  Monthly Admissions </p>
                                                                                <a class="Addmissions" href="#" data-url="@Url.Action("AddmissionCandidatetListAsyncHP","Counsellor")" id="Addmissions" data-toggle="modal" data-text="Monthly Addmission List" data-target="#EditLeaveModal" title="List">
                                                                                    <div class="row">
                                                                                        <div class="counter" id="Addmission" data-countto="@Html.ViewBag.Addmission" data-duration="2000">0</div>

                                                                                        <div class="col-7" style="color:white;">
                                                                                            <span class="count" id="monthlyProspectiveCount">Prospective : <span style="font-weight: bold; font-size: 24px;"> @ViewBag.monthlyProspectiveCount</span>
                                                                                        </div>

                                                                                    </div>
                                                                                    <div class="row mt-1" style="color:white;">
                                                                                        <!-- Second Row with Two Columns -->
                                                                                        <div class="col-6">
                                                                                            <span class="count" id="CourseAddmisionCount">Course : <span style="font-weight: bold; font-size: 24px;"> @ViewBag.CourseAddmisionCount</span>
                                                                                        </div>
                                                                                        <div class="col-6" style="left:-1vw;">
                                                                                            <span class="count" id="PlacementAddmisionCount">Placement : <span style="font-weight: bold; font-size: 24px;"> @ViewBag.PlacementAddmisionCount</span>
                                                                                        </div>
                                                                                    </div>
                                                                                </a>
                                                                            </div>
                                                                        </div>

                                                                    </div>
                                                                </div>
                                                            </div>




                                                            <div class="col-lg-3 col-6" @*style="margin-left:10px;"*@>
                                                                <!--small box-->
                                                                <div class="small-box bg-gradient-indigo" style="height:149px;">
                                                                    <div class="inner">
                                                                        <p><i class="fas fa-user" style="font-size: 24px;"></i> Discount Student Count </p>
                                                                        <a class="DiscountCount" href="#" data-url="@Url.Action("DiscountCandidateListAsyncHP","Counsellor")" id="DiscountCount" data-toggle="modal" data-text="Discount Candidate List" data-target="#EditLeaveModal" title="List">
                                                                            <div class="counter" id="Addmission" data-countto="@Html.ViewBag.student_count" data-duration="2000">0</div>
                                                                        </a>
                                                                        @*<p> <i class='nav-icon fa fa-user' style='font-size:24px'></i>Discount Student Count </p>
                                                                            <span class="count" id="student_count" style="font-weight: bold; font-size: 24px;">@Html.ViewBag.student_count</span>*@
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="col-lg-3 col-6" @*style="margin-left:10px;"*@>
                                                                <!--small box-->
                                                                <div class="small-box bg-gradient-olive" style="height:149px;">
                                                                    <div class="inner">
                                                                        <p><i class="fas fa-user" style="font-size: 24px;"></i> Todays Followup</p>
                                                                        <a class="FollowupCount" href="#" data-url="@Url.Action("TodaysFollowupList","Counsellor")" id="TodayFollowup" data-toggle="modal" data-text="Followup Candidate List" data-target="#EditLeaveModal" title="List">
                                                                            <div class="counter" id="Followup" data-countto="@Html.ViewBag.followup_count" data-duration="2000">0</div>
                                                                        </a>
                                                                        @*<p> <i class='nav-icon fa fa-user' style='font-size:24px'></i>Discount Student Count </p>
                                                                            <span class="count" id="student_count" style="font-weight: bold; font-size: 24px;">@Html.ViewBag.student_count</span>*@
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="col-lg-3 col-6" @*style="margin-left:10px;"*@>

                                                                <!--small box-->
                                                                <div class="small-box bg-gradient-fuchsia" style="height:149px;">
                                                                    <div class="inner">
                                                                        <p><i class="fas fa-user" style="font-size: 24px;"></i> Missed Followup</p>
                                                                        <a class="MissedFollowup" href="#" data-url="@Url.Action("MissedFollowupList","Counsellor")" id="MissedFollowup" data-toggle="modal" data-text="Missed Followup List" data-target="#EditLeaveModal" title="List">
                                                                            <div class="counter" id="Followup" data-countto="@Html.ViewBag.missedfp_count" data-duration="2000">0</div>
                                                                        </a>
                                                                        @*<p> <i class='nav-icon fa fa-user' style='font-size:24px'></i>Discount Student Count </p>
                                                                            <span class="count" id="student_count" style="font-weight: bold; font-size: 24px;">@Html.ViewBag.student_count</span>*@
                                                                    </div>
                                                                </div>


                                                            </div>
                                                            @*here the card for the billing amount*@

                                                            <div class="col-lg-3 col-6">
                                                                <!-- small box -->
                                                                <div class="small-box bg-success" style="height:149px;">
                                                                    <div class="inner">
                                                                        <p><i class="fas fa-money-bill" style="font-size: 24px;"></i> Billing Amount</p>
                                                                        <span>
                                                                            <i class="fas fa-rupee-sign" style="font-size: 24px;"></i>
                                                                            <span id="BillingCount">@Html.ViewBag.BillingAmount</span>
                                                                        </span>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </section>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group form-inline">
                    <div class="col-md-1" style="padding-right:0px !important">
                        <label> From </label>
                    </div>
                    <div class="col-md-2">
                        <input type="month" class="form-control" id="startMonthYear" name="startMonthYear">
                    </div>
                    <div class="col-md-1" style="padding-right:0px !important">
                        <label> To </label>
                    </div>
                    <div class="col-md-2">
                        <input type="month" class="form-control" id="endMonthYear" name="endMonthYear">
                    </div>
                    @*<div class="col-md-2">
                        @Html.DropDownListFor(model => model.CourseId, new SelectList(ViewBag.Course, "Value", "Text"), "All Courses", new
       {
    @class = "form-control",
    id = "courseFilter",
    onchange = "loadGraphWithCourse()"
    })

                    </div>*@


                    <div class="col-md-3">
                        <button type="button" class="btn btn-outline-info" id="Createbatch" style=" height:40px; top: 417px; left: 680px;" title="Create Batch">
                            <img src="~/Content/Counseller/img/CreateBatch.jfif" style="height: 25px; width: 28px;" />
                        </button>
                    </div>
                </div>

                <!-- Upcoming Batches Section -->
                <div class="container">
                    <div class="row">
                        <div class="col-md-7">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="text-center">Lead vs Enquiry vs Admission  </h5>

                                    <div id="container1" style="min-width: 310px; height: 400px; max-width:2000px; margin: 0 auto">
                                        <canvas id="myChart" width="600" height="400"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col">
                            <div class="col" style="top:-4vw;">  <h5 class="heading">Upcoming Batches</h5> </div>
                            <div class="small-box " style="max-height: 30vw; top:-4vw; overflow-y: auto;">
                                @{
                                    // List of predefined colors
                                    var colors = new List<string> { "red", "green", "blue", "skyblue", "lightpink", "orange" };
                                    int colorCount = colors.Count;
                                    int colorIndex = 0; // Initialize index to start from the first color
                                }

                                @if (ViewBag.UpcomingBatches != null && ViewBag.UpcomingBatches.Count > 0)
                                {
                                    foreach (var item in ViewBag.UpcomingBatches)
                                    {
                                        string cardColor = colors[colorIndex];
                                        colorIndex = (colorIndex + 1) % colorCount; // Cycle back to the start of the list if necessary


                                        <div class="cards" style="padding-top: 1vw;">
                                            <div class="card" style="left: 6vw; padding-top: 1vw; background-color: @cardColor; height: 12vw;">
                                                <p class="tip"> <span class="count" style="font-weight: bold; font-size: 24px; color: black;" title="Course Name">@item.CourseName</span> <br /> <span class="count" title="Batch Name">@item.BatchName</span></p>
                                                <p class="second-text">
                                                    <span style="font-weight: bold;">Start Date:</span> : <span class="count blink" style="font-weight: bold; font-size: 1.5em;" title="Batch Start Date">@item.StartDate.ToShortDateString()</span>
                                                </p>
                                                <p class="second-text">
                                                    <span style="font-weight: bold;">Batch Type:</span> : <span class="count " style="font-weight: bold; font-size:19px;" title="Batch Type">@item.TypeName</span>
                                                </p>
                                            </div>
                                        </div>

                                    }
                                }
                                else
                                {
                                    <h1 class="text-danger" style="text-align:left">No Data Available.....</h1>
                                }
                            </div>
                            <style>
                                @@keyframes blink {
                                    0% {
                                        opacity: 1;
                                    }

                                    50% {
                                        opacity: 0;
                                    }

                                    100% {
                                        opacity: 1;
                                    }
                                }

                                .blink {
                                    animation: blink 2s infinite;
                                    color: black;
                                    font: bold;
                                }

                                .heading {
                                    font-size: 28px;
                                    font-weight: bold;
                                    background: linear-gradient(to right, #ff6f00, #ffb300);
                                    -webkit-background-clip: text;
                                    -webkit-text-fill-color: transparent;
                                    text-align: center;
                                    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
                                    margin-bottom: 20px;
                                    padding: 10px 0;
                                }

                                .cards {
                                    display: flex;
                                    flex-direction: column;
                                    gap: 15px;
                                }

                                    .cards .red {
                                        background-color: #f43f5e;
                                    }

                                    .cards .blue {
                                        background-color: #3b82f6;
                                    }

                                    .cards .green {
                                        background-color: #22c55e;
                                    }

                                    .cards .lightblue {
                                        background-color: aqua
                                    }


                                    .cards .card {
                                        display: flex;
                                        align-items: center;
                                        justify-content: center;
                                        flex-direction: column;
                                        text-align: center;
                                        height: 100px;
                                        width: 250px;
                                        border-radius: 10px;
                                        color: white;
                                        cursor: pointer;
                                        transition: 400ms;
                                    }

                                        .cards .card p.tip {
                                            font-size: 1em;
                                            font-weight: 700;
                                        }

                                        .cards .card p.second-text {
                                            /*  font-size: .7em;*/
                                            font-size: 1em;
                                        }

                                        .cards .card:hover {
                                            transform: scale(1.1, 1.1);
                                        }

                                    .cards:hover > .card:not(:hover) {
                                        filter: blur(10px);
                                        transform: scale(0.9, 0.9);
                                    }

                                .table-container {
                                    max-width: 100%;
                                    overflow-x: auto;
                                }

                                .table {
                                    width: 100%; /* Ensure table stretches to container width */
                                    border-collapse: collapse; /* Optional: for better appearance */
                                }

                                    .table th, .table td {
                                        padding: 8px;
                                        border: 1px solid #ccc; /* Optional: Add borders */
                                    }

                                .search-box {
                                    margin-bottom: 10px;
                                    margin-left: 38vw;
                                    margin-top: 1vw;
                                }
                            </style>
                        </div>
                    </div>
                </div>


                <div class="container">
                    <div class="row">
                        <div class="form-group form-inline col-md-12">
                            <!-- First Date Range for Course VS Placement Admission Count -->
                            <div class="col-md-1" style="padding-right:0px !important">
                                <label for="CVSPstartMonthYear">From </label>
                            </div>
                            <div class="col-md-2">
                                <input type="month" class="form-control" id="CVSPstartMonthYear" name="startMonthYear" value="@ViewBag.StartMonthYear" max="@DateTime.Now.ToString("yyyy-MM")">
                            </div>
                            <div class="col-md-1" style="padding-right:0px !important">
                                <label for="CVSPendMonthYear">To </label>
                            </div>
                            <div class="col-md-2">
                                <input type="month" class="form-control" id="CVSPendMonthYear" name="endMonthYear" value="@ViewBag.EndMonthYear" max="@DateTime.Now.ToString("yyyy-MM")">
                            </div>



                            <!-- Second Date Range for Source Wise All Count -->
                            <div class="col-md-1" style="padding-left:2vw !important">
                                <label for="PiestartMonthYear">From </label>
                            </div>
                            <div class="col-md-2" style="padding-left:2vw">
                                <input type="month" class="form-control" id="PiestartMonthYear" name="startMonthYear" max="@DateTime.Now.ToString("yyyy-MM")">
                            </div>
                            <div class="col-md-1" style="padding-left:2vw !important">
                                <label for="PieendMonthYear">To </label>
                            </div>
                            <div class="col-md-2">
                                <input type="month" class="form-control" id="PieendMonthYear" name="endMonthYear" max="@DateTime.Now.ToString("yyyy-MM")">
                            </div>
                        </div>
                    </div>


                    <div class="row">
                        <!-- First Chart Container -->
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="text-center">Training VS Placement Admission </h5>
                                    <div id="container1" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto;">
                                        <canvas id="chartCourseVsPlacement" width="600" height="400"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Second Chart Container -->
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="text-center">Source Wise All Count </h5>
                                    <div id="container2" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto;">
                                        <canvas id="myPieChart" width="600" height="400"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="form-group form-inline col-md-6">
                    <div class="col-md-2 offset-md-1">
                        <label for="CAstartMonthYear">From</label>
                    </div>
                    <div class="col-md-3">
                        <input type="month" class="form-control" id="CAstartMonthYear" name="startMonthYear">
                    </div>

                    <div class="col-md-2 offset-md-1">
                        <label for="CAendMonthYear">To</label>
                    </div>
                    <div class="col-md-3">
                        <input type="month" class="form-control" id="CAendMonthYear" name="endMonthYear">
                    </div>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-md-7">
                            <div class="card" style="align-content:center;">
                                <div class="card-body">
                                    <h5 class="text-center"> Course Wise Admission </h5>

                                    <div id="container1" style="min-width: 70vw; height: 26vw; margin: 0 auto">
                                        <div id="lollypopChartCourseWiseAdmCount" width="600" height="400"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>


    @*PopUpScript*@

    <div class="modal" id="CreateSectionModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document" style="margin: 0 auto; display: flex; justify-content: center; align-items: center;">
            <div class="modal-content" style="height:25vw; width:65vw;">
                <div class="modal-header" style="text-align: left;">
                    <div style="height:3vw; width:55vw; color: #33CCCC;">
                        <h2>Create Batch</h2>
                    </div>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="color:red;">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="EditLeaveModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel" style="color: #33CCCC;">Candidate List</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="color:red;">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>


                <div class="modal-body overflow-y-auto container">
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
    <div id="chart"></div>

    <script>
        // JavaScript for filtering table rows based on input
        document.getElementById("searchInput").addEventListener("keyup", function () {
            const input = this.value.toLowerCase();
            const table = document.getElementById("myTable");
            const rows = table.getElementsByTagName("tr");

            for (let row of rows) {
                const cells = row.getElementsByTagName("td");
                let found = false;
                for (let cell of cells) {
                    if (cell.innerText.toLowerCase().indexOf(input) > -1) {
                        found = true;
                        break;
                    }
                }
                row.style.display = found ? "" : "none";
            }
        });
    </script>

    <script>
    // Use jQuery noConflict mode
    jQuery.noConflict();

    // Document ready function
    jQuery(document).ready(function ($) {
        // Click event handler for the button
        $("#Createbatch").click(function () {
            $.ajax({
                url: '@Url.Action("CounsellorCreateBatch", "Counsellor")', // Check if this URL is correctly resolving
                type: 'GET',
                success: function (result) {
                    $("#CreateSectionModal").find(".modal-body").html(result); // Inject the result into modal body
                    $("#CreateSectionModal").modal('show'); // Show the modal
                },
                error: function () {
                    // Handle error if AJAX request fails
                    alert('Error loading data.');
                }
            });
        });
    });
    </script>


    <script type="text/javascript">

        function DynamicAjax(url) {
            if (url) {
                showLoadingOverlay();
                $.ajax({
                    url: url,
                    type: 'GET',
                    /*data: { CandidateCode: candidateCode },*/
                    success: function (data) {
                        $('#EditLeaveModal .modal-body').html(data);
                        $('#EditLeaveModal').modal('show');
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error("AJAX Error:", textStatus, errorThrown);
                    },
                    complete: function () {
                        hideLoadingOverlay();
                    }
                });
            } else {
                console.error("URL or candidate code is not defined");
            }
        }


        $('.DailyEnquiry').on('click', function () {
            var url = $(this).data('url');
            var text = $(this).data('text');
            $('#exampleModalLabel').text(text);

            var selectedDate = $('#MonthYearFilter').val();
            if (!selectedDate) {
                selectedDate = new Date().toISOString().split('T')[0];
            }

            url = url + '?selectedDate=' + encodeURIComponent(selectedDate);

            console.log("URL with date:", url);
            DynamicAjax(url);
        });

        $('.PendingEnquiry').on('click', function () {
            var url = $(this).data('url');
            var text = $(this).data('text');
            $('#exampleModalLabel').text(text);

            var selectedDate = $('#MonthYearFilter').val();
            if (!selectedDate) {
                selectedDate = new Date().toISOString().split('T')[0];
            }

            url = url + '?selectedDate=' + encodeURIComponent(selectedDate);

            console.log("URL with date:", url);
            DynamicAjax(url);
        });

        $('.lostEnquiry').on('click', function () {
            var url = $(this).data('url');
            var text = $(this).data('text');
            $('#exampleModalLabel').text(text);

            var selectedDate = $('#MonthYearFilter').val();
            if (!selectedDate) {
                selectedDate = new Date().toISOString().split('T')[0];
            }

            url = url + '?selectedDate=' + encodeURIComponent(selectedDate);

            console.log("URL with date:", url);
            DynamicAjax(url);
        });


        $('.Leads').on('click', function () {
            var url = $(this).data('url');
            var text = $(this).data('text');
            $('#exampleModalLabel').text(text);

            var selectedDate = $('#MonthYearFilter').val();
            if (!selectedDate) {
                selectedDate = new Date().toISOString().split('T')[0];
            }

            url = url + '?selectedDate=' + encodeURIComponent(selectedDate);

            console.log("URL with date:", url);
            DynamicAjax(url);
        });

        $('.MonthlyEnq').on('click', function () {
            var url = $(this).data('url');
            var text = $(this).data('text');
            $('#exampleModalLabel').text(text);

            var selectedDate = $('#MonthYearFilter').val();
            if (!selectedDate) {
                selectedDate = new Date().toISOString().split('T')[0];
            }

            url = url + '?selectedDate=' + encodeURIComponent(selectedDate);

            console.log("URL with date:", url);
            DynamicAjax(url);
        });

        $('.LeadsToEnquiry').on('click', function () {
            var url = $(this).data('url');
            var text = $(this).data('text');
            $('#exampleModalLabel').text(text);

            var selectedDate = $('#MonthYearFilter').val();
            if (!selectedDate) {
                selectedDate = new Date().toISOString().split('T')[0];
            }

            url = url + '?selectedDate=' + encodeURIComponent(selectedDate);

            console.log("URL with date:", url);
            DynamicAjax(url);
        });

        $('.Addmissions').on('click', function () {
            var url = $(this).data('url');
            var text = $(this).data('text');
            $('#exampleModalLabel').text(text);

            var selectedDate = $('#MonthYearFilter').val();
            if (!selectedDate) {
                selectedDate = new Date().toISOString().split('T')[0];
            }

            url = url + '?selectedDate=' + encodeURIComponent(selectedDate);

            console.log("URL with date:", url);
            DynamicAjax(url);
        });

        $('.EnqFormPending').on('click', function () {
            var url = $(this).data('url');
            var text = $(this).data('text');
            $('#exampleModalLabel').text(text);

            var selectedDate = $('#MonthYearFilter').val();
            if (!selectedDate) {
                selectedDate = new Date().toISOString().split('T')[0];
            }

            url = url + '?selectedDate=' + encodeURIComponent(selectedDate);

            console.log("URL with date:", url);
            DynamicAjax(url);
        });


        $('.DiscountCount').on('click', function () {
            var url = $(this).data('url');
            var text = $(this).data('text');
            $('#exampleModalLabel').text(text);

            var selectedDate = $('#MonthYearFilter').val();
            if (!selectedDate) {
                selectedDate = new Date().toISOString().split('T')[0];
            }

            url = url + '?selectedDate=' + encodeURIComponent(selectedDate);

            console.log("URL with date:", url);
            DynamicAjax(url);
        });

        $('.FollowupCount').on('click', function () {
            var url = $(this).data('url');
            var text = $(this).data('text');
            $('#exampleModalLabel').text(text);
            console.log("URL:", url);
            DynamicAjax(url);
        });
        $('.MissedFollowup').on('click', function () {
            var url = $(this).data('url');
            var text = $(this).data('text');
            $('#exampleModalLabel').text(text);
            console.log("URL:", url);
            DynamicAjax(url);
        });

    </script>
    <script>
        $.ajax({
            url: tabContentUrl,
            type: 'GET',
            data: {
                startDate: startDate,
                endDate: endDate,
                filterType: Course,
                TabType: activeTabId,
                EnqStatusId: enquiryStatusId
            },
            success: function (data) {
                $('#LoadLists').html(data);
                var table = $('#LoadLists table').DataTable({
                    "responsive": true,
                    "lengthChange": false,
                    "autoWidth": false,
                    "stateSave": true,
                    "dom": 'Bfrtip',
                    "buttons": [
                        {
                            extend: 'copy',
                            text: '<img src="/Content/Admin/icon/copy.png" title="Copy" alt="Copy" height="20" width="20" />',
                            titleAttr: 'Copy'
                        },
                        {
                            extend: 'csv',
                            text: '<img src="/Content/Admin/icon/csv.jpg" title="CSV" alt="CSV" height="25" width="25" />',
                            titleAttr: 'CSV'
                        },
                        {
                            extend: 'excel',
                            text: '<img src="/Content/Admin/icon/xls-file.png" title="xls" alt="xls" height="20" width="20" />',
                            titleAttr: 'Excel'
                        },
                        {
                            extend: 'pdf',
                            text: '<img src="/Content/Admin/icon/pdf-file.png" title="pdf" alt="pdf" height="20" width="20" />',
                            titleAttr: 'PDF'
                        },
                        {
                            extend: 'print',
                            text: '<img src="/Content/Admin/icon/printer.png" title="printer" alt="printer" height="20" width="20" />',
                            titleAttr: 'Print'
                        },
                        {
                            extend: 'colvis',
                            text: '<img src="/Content/Admin/icon/column.jpg" title="column" alt="column" height="20" width="20" />',
                            titleAttr: 'Columns'
                        }
                    ]
                });
                table.buttons().container().appendTo('#LoadLists .col-md-6:eq(0)');
            },
            error: function () {
                alert('Error loading content.');
            }
        });

    </script>


    <script>
        $(document).ready(function () {
            let myChart1; // Declare a global variable to store the chart instance

            // Calculate the current date
            const currentDate = new Date();
            const currentYear = currentDate.getFullYear();
            const currentMonth = (currentDate.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-based

            // Calculate the date one year ago
            const pastDate = new Date();
            pastDate.setFullYear(currentYear - 1);
            const pastYear = pastDate.getFullYear();
            const pastMonth = (pastDate.getMonth() + 1).toString().padStart(2, '0');

            // Set the date pickers' values
            $('#startMonthYear').val(`${pastYear}-${pastMonth}`);
            $('#endMonthYear').val(`${currentYear}-${currentMonth}`);

            // Set the max attribute to today's date to prevent future date selection
            const maxDate = `${currentYear}-${currentMonth}`;
            $('#startMonthYear').attr('max', maxDate);
            $('#endMonthYear').attr('max', maxDate);

            // Function to validate dates
            function validateDates(startDate, endDate) {
                const start = new Date(startDate + '-01');
                const end = new Date(endDate + '-01');
                const today = new Date(currentYear, currentDate.getMonth(), 1); // Consider the first day of the current month as today's date

                if (start > end) {
                    $('#endMonthYear').val(startDate); // Reset end date to start date if invalid
                    endDate = startDate;
                }

                if (start > today) {
                    $('#startMonthYear').val(maxDate); // Reset start date to current month if invalid
                    startDate = maxDate;
                }

                if (end > today) {
                    $('#endMonthYear').val(maxDate); // Reset end date to current month if invalid
                    endDate = maxDate;
                }

                // Update the min and max attributes based on the selected dates
                $('#startMonthYear').attr('max', endDate);
                $('#endMonthYear').attr('min', startDate);

                return { startDate, endDate };
            }
            function loadGraph(startDate, endDate) {
                $.ajax({
                    url: '@Url.Action("GraphEnqvsAdmission", "Counsellor")',
                    data: {
                        startDate: startDate,
                        endDate: endDate
                    },
                    type: 'GET',
                    success: function (response) {
                        const graphData = response.DataFetchedEnqvsAdmission ? JSON.parse(response.DataFetchedEnqvsAdmission) : [];
                        renderChart(graphData);
                    },
                    error: function (xhr, status, error) {
                        console.error("An error occurred while fetching graph data:", error);
                    }
                });
            }

            // Function to render the chart
            function renderChart(dataPoint) {
                const ctx = document.getElementById('myChart').getContext('2d');

                // Destroy previous chart instance if it exists to prevent duplication
                if (myChart1) {
                    myChart1.destroy();
                }

                const labels = dataPoint.map(data => data.Label);
                const leadData = dataPoint.map(data => data.Lead);
                const enquiryData = dataPoint.map(data => data.enquiry);
                const admissionData = dataPoint.map(data => data.Admission);

                myChart1 = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [
                            {
                                label: 'Lead Count',
                                data: leadData,
                                backgroundColor: "#e60049",
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1
                            },
                            {
                                label: 'Enquiry Count',
                                data: enquiryData,
                                backgroundColor: "#0bb4ff",
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            },
                            {
                                label: 'Admission Count',
                                data: admissionData,
                                backgroundColor: "#e6d800",
                                borderColor: 'rgba(255, 87, 34, 1)',
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        scales: {
                            x: {
                                stacked: false, // Ensure the bars are not stacked on the x-axis
                                title: {
                                    display: true,
                                    text: 'Month' // X-axis title
                                }
                            },
                            y: {
                                stacked: false, // Ensure the bars are not stacked on the y-axis
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Candidate Count' // Y-axis title
                                }
                            }
                        }
                    }
                });
            }


            // Load the graph with the calculated default dates
            loadGraph($('#startMonthYear').val(), $('#endMonthYear').val());

            // Handle date range change
            $('#startMonthYear, #endMonthYear').on('change', function () {
                const startDate = $('#startMonthYear').val();
                const endDate = $('#endMonthYear').val();
                const validatedDates = validateDates(startDate, endDate);
                loadGraph(validatedDates.startDate, validatedDates.endDate);
            });
        });

    </script>

    <script type="text/javascript">
  $(document).ready(function () {
      // Function to initialize the line chart
        function initializeLineChart(LineChartData) {
          var ctx = $('#chartCourseVsPlacement')[0].getContext('2d');
          myCourseVsPlacementGraph = new Chart(ctx, {
              type: 'line',
              data: {
                  labels: LineChartData.map(function (item) { return item.Label; }),
                  datasets: [{
                      label: 'Training',
                      data: LineChartData.map(function (item) { return item.Course; }),
                      fill: false,
                      borderColor: '#4BD2B1',
                      tension: 0.1
                  }, {
                      label: 'Placement',
                      data: LineChartData.map(function (item) { return item.Placement; }),
                      fill: false,
                      borderColor: '#5080EF',
                      tension: 0.1
                  }]
              },
              options: {
                  scales: {
                      x: {
                          title: {
                              display: true,
                              text: 'Months',  // Label for X-axis
                              font: {
                                  size: 14,       // Font size for the title
                                  weight: 'bold'  // Font weight for the title
                              },
                              color: '#666',     // Color of the title
                              padding: { top: 10 } // Padding between the title and axis
                          }
                      },
                      y: {
                          title: {
                              display: true,
                              text: 'Candidate Count',  // Label for Y-axis
                              font: {
                                  size: 14,       // Font size for the title
                                  weight: 'bold'  // Font weight for the title
                              },
                              color: '#666',     // Color of the title
                              padding: { bottom: 10 } // Padding between the title and axis
                          },
                          beginAtZero: true // Ensure Y-axis starts at 0
                      }
                  },

              }

          });
      }


      // Update the line chart with new data
      function updateLineChart(data) {
          if (myCourseVsPlacementGraph) {
              myCourseVsPlacementGraph.data.labels = data.map(function (item) { return item.Label; });
              myCourseVsPlacementGraph.data.datasets[0].data = data.map(function (item) { return item.Course; });
              myCourseVsPlacementGraph.data.datasets[1].data = data.map(function (item) { return item.Placement; });
              myCourseVsPlacementGraph.update();
          }
      }

      // Validate start and end month-year
      function validateMonthYears(startMonthYear, endMonthYear) {
          var start = new Date(startMonthYear + '-01');
          var end = new Date(endMonthYear + '-01');
          var today = new Date();

          // Check if start month-year is greater than end month-year
          if (start > end) {
              $('#CVSPendMonthYear').val(startMonthYear); // Reset end month-year to start month-year if invalid
              endMonthYear = startMonthYear;
          }

          // Check if start month-year is in the future
          if (start > today) {
              $('#CVSPstartMonthYear').val(today.toISOString().slice(0, 7)); // Reset start month-year to current month if invalid
              startMonthYear = today.toISOString().slice(0, 7);
          }

          // Check if end month-year is in the future
          if (end > today) {
              $('#CVSPendMonthYear').val(today.toISOString().slice(0, 7)); // Reset end month-year to current month if invalid
              endMonthYear = today.toISOString().slice(0, 7);
          }

          // Update the min and max attributes based on the selected dates
          $('#CVSPstartMonthYear').attr('max', endMonthYear);
          $('#CVSPendMonthYear').attr('min', startMonthYear);

          return true; // Month-years are valid
      }

      // Fetch data and update the chart based on month-year range
      function FetchDataAndUpdateLineChart(startMonthYear, endMonthYear) {
          console.log('Fetching data from ' + startMonthYear + ' to ' + endMonthYear); // Debugging

          // Validate month-years before fetching data
          if (!validateMonthYears(startMonthYear, endMonthYear)) {
              return;
          }

          $.ajax({
              url: '@Url.Action("GraphCourseVsPlacement", "Counsellor")',
              type: 'GET',
              data: { startDate: startMonthYear, endDate: endMonthYear },
              success: function(result) {
                  console.log(result); // Debugging
                  if (result.error) {
                      console.error(result.error);
                      return;
                  }
                  try {
                      var data = JSON.parse(result.FilteredLineChartData);
                      updateLineChart(data);
                  } catch (e) {
                      console.error('Error parsing data: ' + e.message);
                  }
              },
              error: function(xhr, status, error) {
                  console.error('Failed to fetch data: ' + error);
              }
          });
      }

      // Initialize the chart with default data
      function initializeWithDefaultData() {
          console.log('Initializing chart with default data'); // Debugging
          var DataLineChart = JSON.parse('@Html.Raw(ViewBag.DataPoint3)');
          initializeLineChart(DataLineChart);

          // Initialize default month-year range (one year ago to today)
         var today = new Date();
          var oneYearAgo = new Date(today); // Clone today's date
          oneYearAgo.setMonth(today.getMonth() - 11); // Subtract 12 months

          // Format as YYYY-MM
          var formattedLastYear = oneYearAgo.toISOString().slice(0, 7);
          var formattedToday = today.toISOString().slice(0, 7);

          // Set the default month-year values for month pickers
          $('#CVSPstartMonthYear').val(formattedLastYear);
          $('#CVSPendMonthYear').val(formattedToday);

          // Set max attribute to prevent future dates
          $('#CVSPstartMonthYear').attr('max', formattedToday);
          $('#CVSPendMonthYear').attr('max', formattedToday);

          // Fetch data for default month-year range
          FetchDataAndUpdateLineChart(formattedLastYear, formattedToday);
      }

      // Handle month-year change events and update the chart
      function handleLineChartDateChange() {
          var startMonthYear = $('#CVSPstartMonthYear').val();
          var endMonthYear = $('#CVSPendMonthYear').val();
          FetchDataAndUpdateLineChart(startMonthYear, endMonthYear);
      }

      // Attach change event listeners to month pickers
      $('#CVSPstartMonthYear').on('change', handleLineChartDateChange);
      $('#CVSPendMonthYear').on('change', handleLineChartDateChange);

      // Initialize chart with default month-year range
      initializeWithDefaultData();
  });
    </script>

    <div id="lollypopChartCourseWiseAdmCount"></div>


    <script type="text/javascript">
  $(document).ready(function () {
      // Set default date range (one year ago to today)
      var today = new Date();
      var lastYear = new Date(today.getFullYear() - 1, today.getMonth());
      var formattedLastYear = lastYear.toISOString().slice(0, 7);
      var formattedToday = today.toISOString().slice(0, 7);

      // Initialize date pickers with default dates
      $('#CAstartMonthYear').val(formattedLastYear);
      $('#CAendMonthYear').val(formattedToday);

      // Set max attribute to prevent selecting future dates
      $('#CAstartMonthYear').attr('max', formattedToday);
      $('#CAendMonthYear').attr('max', formattedToday);

      // Function to validate start and end dates
      function validateDates(startDate, endDate) {
          var start = new Date(startDate + '-01');
          var end = new Date(endDate + '-01');
          var today = new Date();

          if (start > end) {
              toastr.error('Start Month-Year cannot be greater than End Month-Year.');
              return false;
          }
          if (start > today) {
              toastr.error('Start Month-Year cannot be in the future.');
              return false;
          }
          return true;
      }

      // Function to initialize the Lollipop Chart
      function initializeLollypopChart(LollypopChartData) {
          if (!LollypopChartData || LollypopChartData.length === 0) {
				$('#lollypopChartCourseWiseAdmCount').html('<h1 class="text-danger" style="text-align:left">No Data Available.....</h1>');

				return;
			}

		$('#lollypopChartCourseWiseAdmCount').html('');
          var margin = { top: 20, right: 20, bottom: 85, left: 50 },
              width = 600 - margin.left - margin.right,
              height = 400 - margin.top - margin.bottom;

          // Clear the existing chart
          d3.select("#lollypopChartCourseWiseAdmCount").select("svg").remove();

          // Append the SVG container
          var svg = d3.select("#lollypopChartCourseWiseAdmCount")
              .append("svg")
              .attr("width", width + margin.left + margin.right)
              .attr("height", height + margin.top + margin.bottom)
              .append("g")
              .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

          var xScale = d3.scaleBand().range([0, width]).padding(0.1);
          var yScale = d3.scaleLinear().range([height, 0]);

          xScale.domain(LollypopChartData.map(function (d) { return d.Label; }));
          yScale.domain([0, d3.max(LollypopChartData, function (d) { return d.AdmCount; })]);

          svg.selectAll(".line")
              .data(LollypopChartData)
              .enter()
              .append("line")
              .attr("class", "line")
              .attr("x1", function (d) { return xScale(d.Label) + xScale.bandwidth() / 2; })
              .attr("x2", function (d) { return xScale(d.Label) + xScale.bandwidth() / 2; })
              .attr("y1", height)
              .attr("y2", function (d) { return yScale(d.AdmCount); })
              .attr("stroke", "black")
              .attr("stroke-width", 1);

          svg.selectAll(".dot")
              .data(LollypopChartData)
              .enter()
              .append("circle")
              .attr("class", "dot")
              .attr("cx", function (d) { return xScale(d.Label) + xScale.bandwidth() / 2; })
              .attr("cy", function (d) { return yScale(d.AdmCount); })
              .attr("r", 20)
              .attr("fill", "#5080EF")
              .attr("stroke", "#36a2eb")
              .attr("stroke-width", 2);

          svg.selectAll(".text")
              .data(LollypopChartData)
              .enter()
              .append("text")
              .attr("class", "text")
              .attr("x", function (d) { return xScale(d.Label) + xScale.bandwidth() / 2; })
              .attr("y", function (d) { return yScale(d.AdmCount); })
              .attr("dy", ".35em")
              .attr("fill", "black")
              .attr("text-anchor", "middle")
              .text(function (d) { return d.AdmCount; });

          svg.append("g")
              .attr("class", "x axis")
              .attr("transform", "translate(0," + height + ")")
              .call(d3.axisBottom(xScale))
              .selectAll("text")
              .attr("transform", "rotate(-45)")
              .style("text-anchor", "end");

          svg.append("g")
              .attr("class", "y axis")
              .call(d3.axisLeft(yScale));

          svg.append("text")
              .attr("transform", "translate(" + (width / 2) + " ," + (height + margin.bottom - 10) + ")")
              .style("text-anchor", "middle")
              .style("font-size", "14px")
              .style("font-weight", "bold")
              .text("Course");

          // Add Y Axis label
          svg.append("text")
              .attr("transform", "rotate(-90)")
              .attr("y", 0 - margin.left + 10)
              .attr("x", 0 - (height / 2))
              .attr("dy", "1em")
              .style("text-anchor", "middle")
              .style("font-size", "14px")
              .style("font-weight", "bold")
              .text("Admission Count");
      }

      // Function to fetch data and update the Lollipop Chart
      function fetchDataAndUpdateLollypopChart(startDate, endDate) {
          if (!validateDates(startDate, endDate)) {
              return;
          }

          $.ajax({
              url: '@Url.Action("GraphCourseWiseAdmissionCount", "Counsellor")',
              type: 'GET',
              data: { startDate: startDate, endDate: endDate },
              success: function(result) {
                  if (result.error) {
                      toastr.error(result.error);
                      return;
                  }
                  var data = JSON.parse(result.FilteredLollypopChartData);
                  initializeLollypopChart(data);
              },
              error: function(xhr, status, error) {
                  toastr.error('Failed to fetch data: ' + error);
              }
          });
      }

      // Fetch and display initial data
      var startDate = $('#CAstartMonthYear').val();
      var endDate = $('#CAendMonthYear').val();
      fetchDataAndUpdateLollypopChart(startDate, endDate);

      // Update the chart when date inputs change
      $('#CAstartMonthYear, #CAendMonthYear').on('change', function() {
          var startDate = $('#CAstartMonthYear').val();
          var endDate = $('#CAendMonthYear').val();
          fetchDataAndUpdateLollypopChart(startDate, endDate);
      });

      // Update end date options when start date changes
      $('#CAstartMonthYear').on('change', function() {
          var startDate = $('#CAstartMonthYear').val();
          $('#CAendMonthYear').attr('min', startDate);
      });

      // Update start date options when end date changes
      $('#CAendMonthYear').on('change', function() {
          var endDate = $('#CAendMonthYear').val();
          $('#CAstartMonthYear').attr('max', endDate);
      });
  });
    </script>

    <script type="text/javascript">
  $(document).ready(function () {
      // Set default date range (one year ago to today)
      var today = new Date();
      var lastYear = new Date(today.getFullYear() - 1, today.getMonth());
      var formattedLastYear = lastYear.toISOString().slice(0, 7);
      var formattedToday = today.toISOString().slice(0, 7);

      // Initialize date pickers with default dates
      $('#CAstartMonthYear').val(formattedLastYear);
      $('#CAendMonthYear').val(formattedToday);

      // Set max attribute to prevent selecting future dates
      $('#CAstartMonthYear').attr('max', formattedToday);
      $('#CAendMonthYear').attr('max', formattedToday);

      // Function to validate start and end dates
      function validateDates(startDate, endDate) {
          var start = new Date(startDate + '-01');
          var end = new Date(endDate + '-01');
          var today = new Date();

          if (start > end) {
              toastr.error('Start Month-Year cannot be greater than End Month-Year.');
              return false;
          }
          if (start > today) {
              toastr.error('Start Month-Year cannot be in the future.');
              return false;
          }
          return true;
      }

      // Function to initialize the Lollipop Chart
      function initializeLollypopChart(LollypopChartData) {
         if (!LollypopChartData || LollypopChartData.length === 0) {
			$('#lollypopChartCourseWiseAdmCount').html('<h1 class="text-danger" style="text-align:left">No Data Available.....</h1>');

			return;
		}

			$('#lollypopChartCourseWiseAdmCount').html('');
          var margin = { top: 20, right: 20, bottom: 85, left: 50 },
              width = 600 - margin.left - margin.right,
              height = 400 - margin.top - margin.bottom;

          // Clear the existing chart
          d3.select("#lollypopChartCourseWiseAdmCount").select("svg").remove();

          // Append the SVG container
          var svg = d3.select("#lollypopChartCourseWiseAdmCount")
              .append("svg")
              .attr("width", width + margin.left + margin.right)
              .attr("height", height + margin.top + margin.bottom)
              .append("g")
              .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

          var xScale = d3.scaleBand().range([0, width]).padding(0.1);
          var yScale = d3.scaleLinear().range([height, 0]);

          xScale.domain(LollypopChartData.map(function (d) { return d.Label; }));
          yScale.domain([0, d3.max(LollypopChartData, function (d) { return d.AdmCount; })]);

          svg.selectAll(".line")
              .data(LollypopChartData)
              .enter()
              .append("line")
              .attr("class", "line")
              .attr("x1", function (d) { return xScale(d.Label) + xScale.bandwidth() / 2; })
              .attr("x2", function (d) { return xScale(d.Label) + xScale.bandwidth() / 2; })
              .attr("y1", height)
              .attr("y2", function (d) { return yScale(d.AdmCount); })
              .attr("stroke", "black")
              .attr("stroke-width", 1);

          svg.selectAll(".dot")
              .data(LollypopChartData)
              .enter()
              .append("circle")
              .attr("class", "dot")
              .attr("cx", function (d) { return xScale(d.Label) + xScale.bandwidth() / 2; })
              .attr("cy", function (d) { return yScale(d.AdmCount); })
              .attr("r", 20)
              .attr("fill", "#5080EF")
              .attr("stroke", "#36a2eb")
              .attr("stroke-width", 2);

          svg.selectAll(".text")
              .data(LollypopChartData)
              .enter()
              .append("text")
              .attr("class", "text")
              .attr("x", function (d) { return xScale(d.Label) + xScale.bandwidth() / 2; })
              .attr("y", function (d) { return yScale(d.AdmCount); })
              .attr("dy", ".35em")
              .attr("fill", "black")
              .attr("text-anchor", "middle")
              .text(function (d) { return d.AdmCount; });

          svg.append("g")
              .attr("class", "x axis")
              .attr("transform", "translate(0," + height + ")")
              .call(d3.axisBottom(xScale))
              .selectAll("text")
              .attr("transform", "rotate(-45)")
              .style("text-anchor", "end");

          svg.append("g")
              .attr("class", "y axis")
              .call(d3.axisLeft(yScale));

          svg.append("text")
              .attr("transform", "translate(" + (width / 2) + " ," + (height + margin.bottom - 10) + ")")
              .style("text-anchor", "middle")
              .style("font-size", "14px")
              .style("font-weight", "bold")
              .text("Course");

          // Add Y Axis label
          svg.append("text")
              .attr("transform", "rotate(-90)")
              .attr("y", 0 - margin.left + 10)
              .attr("x", 0 - (height / 2))
              .attr("dy", "1em")
              .style("text-anchor", "middle")
              .style("font-size", "14px")
              .style("font-weight", "bold")
              .text("Admission Count");
      }

      // Function to fetch data and update the Lollipop Chart
      function fetchDataAndUpdateLollypopChart(startDate, endDate) {
          if (!validateDates(startDate, endDate)) {
              return;
          }

          $.ajax({
              url: '@Url.Action("GraphCourseWiseAdmissionCount", "Counsellor")',
              type: 'GET',
              data: { startDate: startDate, endDate: endDate },
              success: function(result) {
                  if (result.error) {
                      toastr.error(result.error);
                      return;
                  }
                  var data = JSON.parse(result.FilteredLollypopChartData);
                  initializeLollypopChart(data);
              },
              error: function(xhr, status, error) {
                  toastr.error('Failed to fetch data: ' + error);
              }
          });
      }

      // Fetch and display initial data
      var startDate = $('#CAstartMonthYear').val();
      var endDate = $('#CAendMonthYear').val();
      fetchDataAndUpdateLollypopChart(startDate, endDate);

      // Update the chart when date inputs change
      $('#CAstartMonthYear, #CAendMonthYear').on('change', function() {
          var startDate = $('#CAstartMonthYear').val();
          var endDate = $('#CAendMonthYear').val();
          fetchDataAndUpdateLollypopChart(startDate, endDate);
      });

      // Update end date options when start date changes
      $('#CAstartMonthYear').on('change', function() {
          var startDate = $('#CAstartMonthYear').val();
          $('#CAendMonthYear').attr('min', startDate);
      });

      // Update start date options when end date changes
      $('#CAendMonthYear').on('change', function() {
          var endDate = $('#CAendMonthYear').val();
          $('#CAstartMonthYear').attr('max', endDate);
      });
  });
    </script>


    <script type="text/javascript">
    $(document).ready(function () {
        // Initialize default date range (one year ago to today)
        var today = new Date();
        var lastYear = new Date(today.getFullYear() - 1, today.getMonth());
        var formattedLastYear = lastYear.toISOString().slice(0, 7);
        var formattedToday = today.toISOString().slice(0, 7);

        // Set the default date range values for date pickers
        $('#PiestartMonthYear').val(formattedLastYear);
        $('#PieendMonthYear').val(formattedToday);

        // Set the max attribute to the current month-year
        $('#PiestartMonthYear, #PieendMonthYear').attr('max', formattedToday);

        let myEnquiryCountforSource;

        // Initialize the pie chart
        function initializePieChart(PieChartData) {
            // Calculate total count
            const totalCount = PieChartData.reduce((sum, item) => sum + item.enquirycount, 0);

            // Extract labels, counts, and colors
            const labels = PieChartData.map(item => item.Label);
            const enquiryCounts = PieChartData.map(item => item.enquirycount);
            const colors = [
                'rgba(75, 192, 195, 0.6)',
                'rgba(250, 99, 132, 0.6)',
                'rgba(54, 162, 235, 0.6)',
                'rgba(260, 206, 86, 0.6)',
                'rgba(153, 102, 240, 0.6)',
                'rgba(245, 159, 64, 0.6)'
            ];

            // Initialize Chart.js
            const ctx = $('#myPieChart')[0].getContext('2d');
            myEnquiryCountforSource = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Lead Count',
                        data: enquiryCounts,
                        backgroundColor: colors,
                        borderColor: colors.map(color => color.replace('0.6', '1')),
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: true,
                            position: 'right', // Position the legend to the right
                            labels: {
                                generateLabels: function (chart) {
                                    const data = chart.data;
                                    const legendItems = data.labels.map((label, index) => {
                                        return {
                                            text: `${label}: ${data.datasets[0].data[index]}`,
                                            fillStyle: data.datasets[0].backgroundColor[index],
                                            hidden: false, // Ensure no cross-out effect
                                            lineWidth: 0, // No line through the legend text
                                            strokeStyle: 'rgba(0,0,0,0)', // No border effect
                                            pointStyle: 'rect',
                                            datasetIndex: 0,
                                        };
                                    });

                                    // Add total count at the end of the legend
                                    legendItems.push({
                                        text: `Total Count: ${totalCount}`,
                                        fillStyle: 'transparent', // No color box for total
                                        hidden: false,
                                        lineWidth: 0,
                                        strokeStyle: 'rgba(0,0,0,0)',
                                        pointStyle: 'none',
                                        datasetIndex: 0,
                                    });

                                    return legendItems;
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    return `${context.label}: ${context.raw}`;
                                }
                            }
                        }
                    }
                }
            });
        }


        // Update the pie chart with new data
        function updatePieChart(data) {
            if (myEnquiryCountforSource) {
                myEnquiryCountforSource.data.labels = data.map(function (item) { return item.Label; });
                myEnquiryCountforSource.data.datasets[0].data = data.map(function (item) { return item.enquirycount; });
                myEnquiryCountforSource.update();
            }
        }

        // Function to validate and adjust dates
    function validateAndAdjustDates() {
    var startDateInput = $('#PiestartMonthYear');
    var endDateInput = $('#PieendMonthYear');
    var startDate = startDateInput.val();
    var endDate = endDateInput.val();

    // Convert dates to JavaScript Date objects for comparison
    var start = new Date(startDate + '-01');
    var end = new Date(endDate + '-01');
    var today = new Date();

    // When start date changes, update end date restrictions
    startDateInput.on('change', function () {
        var selectedStart = new Date($(this).val() + '-01');

        // Calculate the next month after the selected start date
        var minEndDate = new Date(selectedStart);
        minEndDate.setMonth(minEndDate.getMonth() + 1);

        // Format the date to YYYY-MM format for the min attribute
        var minEndDateStr = minEndDate.getFullYear() + '-' +
            String(minEndDate.getMonth() + 1).padStart(2, '0');

        // Set minimum date for end date picker
        endDateInput.attr('min', minEndDateStr);

        // If current end date is before or same as start date, reset it
        var currentEndDate = new Date(endDateInput.val() + '-01');
        if (currentEndDate <= selectedStart) {
            endDateInput.val(minEndDateStr);
        }
    });

    // Validation checks
    if (start > end) {
        toastr.error('Start Month-Year cannot be greater than End Month-Year.');
        return false;
    }

    if (start > today) {
        toastr.error('Start Month-Year cannot be in the future.');
        return false;
    }

    // Check if start and end are the same month
    if (start.getFullYear() === end.getFullYear() &&
        start.getMonth() === end.getMonth()) {
        toastr.error('End Month-Year must be after Start Month-Year.');
        return false;
    }

    return true; // Dates are valid
}

        // Fetch data and update the chart based on date range
        function FetchDataAndUpdatePieChart() {
            var startDate = $('#PiestartMonthYear').val();
            var endDate = $('#PieendMonthYear').val();

            // Validate dates before fetching data
            if (!validateAndAdjustDates()) {
                return;
            }

            $.ajax({
                url: '@Url.Action("SourceWiseLeadVsEnquiry", "Counsellor")',
                type: 'GET',
                data: { startDate: startDate, endDate: endDate },
                success: function(result) {
                    if (result.error) {
                        toastr.error(result.error);
                        return;
                    }
                    var data = JSON.parse(result.FilteredPieChartData);
                    updatePieChart(data);
                },
                error: function(xhr, status, error) {
                    toastr.error('Failed to fetch data: ' + error);
                }
            });
        }

        // Initialize the chart with default data
        var DataPieChart = JSON.parse('@Html.Raw(ViewBag.SourceWiseCount)');
        initializePieChart(DataPieChart);

        // Handle date change events and update the chart
        $('#PiestartMonthYear, #PieendMonthYear').on('change', FetchDataAndUpdatePieChart);

        // Initial validation and adjustment
        validateAndAdjustDates();
    });
    </script>

    <script>
        // Counter animation (if needed)
        $(".counter").each(function () {
            var $this = $(this),
                countTo = $this.attr("data-countto"),
                countDuration = parseInt($this.attr("data-duration"));

            $({ counter: $this.text() }).animate(
                { counter: countTo },
                {
                    duration: countDuration,
                    easing: "linear",
                    step: function () {
                        $this.text(Math.floor(this.counter));
                    },
                    complete: function () {
                        $this.text(this.counter);
                    }
                }
            );
        });

    </script>
    @*<script>
	    $('#courseFilter').on('change', function () {
        loadGraphWithCourse($('#startMonthYear').val(), $('#endMonthYear').val());

    });
    function loadGraphWithCourse(startDate, endDate) {

	var courseId = $('#courseFilter').val();

	$.ajax({
		url: '@Url.Action("FilterGraphEnqvsAdmission", "Counsellor")',
		data: {
			startDate: startDate,
			endDate: endDate,
			courseId: courseId // Add courseId to the request
		},
		type: 'GET',
		success: function (response) {
			const graphData = response.DataFetchedEnqvsAdmission ? JSON.parse(response.DataFetchedEnqvsAdmission) : [];
			renderChart(graphData);
		},
		error: function (xhr, status, error) {
			console.error("An error occurred while fetching graph data:", error);
		}
	});
    </script>*@

</body>
</html>