@model GSTEducationERPLibrary.Accountant.Accountant
@{
    ViewBag.Title = "Add Purchase";
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
    var currency = Html.Raw(ViewBag.Currency);
    var IsitEdit = ViewBag.IsitEdit;
    var IsGSTBill = ViewBag.IsGSTBill;
    if (IsitEdit)
    {
        var listOfitems = ViewBag.ListofItems;
        ViewBag.Title = "Update Purchase";
    }
    //declaring one variable for the checking the vendor is inter or intra state

}
<html>
<head>
    <link href="~/Content/Admin/css/adminlte.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/icheck-bootstrap/icheck-bootstrap.min.css" rel="stylesheet" />

    <script src="~/Content/plugins/jquery/jquery.min.js"></script>
    @*<script src="~/Content/plugins/popper/popper.min.js"></script>*@
    <!-- Bootstrap -->
    <script src="~/Content/plugins/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/Content/Accountant/Scripts/jsPurchase.js"></script>

    @*<link rel="stylesheet" href="~/Content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
        <script src="~/Content/plugins/datatables/jquery.dataTables.min.js"></script>
        <script src="~/Content/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>*@

    <link href="~/Content/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />

    <!-- Select2 library -->
    <link href="~/Content/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css" rel="stylesheet" />
    <script src="~/Content/plugins/select2/js/select2.full.min.js"></script>

    <link href="~/Content/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <script src="~/Content/plugins/sweetalert2/sweetalert2.min.js"></script>

    <link rel="stylesheet" href="~/Content/plugins/toastr/toastr.min.css">
    <script src="~/Content/plugins/toastr/toastr.min.js"></script>

    <!-- Custom Script -->
    <script src="~/Content/Admin/js/Icon.js"></script>

    <style>
        body {
        }

        label {
            text-align: center;
        }

        .table-responsive {
            width: 100%;
            overflow: hidden;
        }

        .table thead {
            display: none;
        }

        .table tr {
            display: block;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 10px;
        }

        .table td {
            display: block;
            text-align: left;
            padding: 8px;
            position: relative;
        }

            .table td::before {
                content: attr(data-label);
                font-weight: bold;
                display: inline-block;
                margin-right: 10px;
                color: #555;
            }

        @@media (min-width: 768px) {
            .table thead {
                display: table-header-group;
            }

            .table tr {
                display: table-row;
                margin-bottom: 0;
                border: none;
                padding: 0;
            }

            .table td {
                display: table-cell;
                text-align: center;
                position: static;
                padding: 10px;
            }

                .table td::before {
                    content: none;
                }
        }

        .tblpymtDtl {
            padding: 0px 100px 0px 100px;
            border-collapse: collapse;
            width: 100%;
            background-color: transparent;
        }


        .mandatoryField {
            color: red;
        }

        .form-container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #f8f8f8;
        }

        .select2-container .select2-selection--single {
            height: 38px !important;
        }

        .select2 select2-container select2-container--default select2-container--below select2-container--focus {
            width: 100% !important;
            font-size: medium !important;
        }

        .select2-container--default .select2-selection--multiple .select2-selection__choice {
            background-color: #33CCCC;
            color: white;
        }

            .select2-container--default .select2-selection--multiple .select2-selection__choice:hover {
                background-color: darkviolet;
                color: white;
            }

        h2 {
            padding-top: 10px;
            margin-bottom: 10px;
            font-family: Verdana;
            font-weight: bold;
            font-size: medium;
            color: #33CCCC;
        }

        h3 {
            padding-top: 10px;
            margin-bottom: 10px;
            font-family: Verdana;
            text-align: center;
            font-weight: bold;
            font-size: medium;
            color: #33CCCC;
        }

        #hideforever, #hideuntilesave, #paymentModeIsBank, #accordion {
            display: none;
        }

        #addexpbutton {
            align-self: center;
            text-align: center;
        }

        .table-container {
            max-height: calc(13 * 2rem);
            overflow-y: auto;
            width: 100%;
            padding-bottom: 0;
        }

        .card-primary.card-outline-tabs > .card-header a.active {
            border-top: 3px solid #33CCCC;
        }

        a {
            color: #33CCCC;
        }

        .card.card-outline-tabs .card-header a:hover {
            color: #33CCCC;
        }

        .card-primary.card-outline-tabs > .card-header a.active, .card-primary.card-outline-tabs > .card-header a.active:hover {
            border-top: 3px solid #33CCCC;
        }

        .card-body {
            font-family: Calibri !important;
            padding-bottom: 0px !important;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        th {
            background-color: #33CCCC;
            color: #000;
            text-align: center !important;
        }

        td {
            text-align: center;
            color: black !important;
        }

        .table td {
            padding: 0px 0px 0px 0px !important;
            font-size: 14px !important;
        }

        .table th {
            padding: 5px 5px 4px 10px !important;
            font-size: 14px !important;
        }

        table.dataTable > thead .sorting:after, table.dataTable > thead .sorting:before {
            font-size: xx-small !important;
        }

        div.dataTables_wrapper div.dataTables_filter {
            margin-top: -40px !important;
        }

        div.dt-buttons {
            margin-top: -20px !important;
        }

        .btn-group > .btn:not(:last-child):not(.dropdown-toggle), .btn-group > .btn-group:not(:last-child) > .btn {
            padding-left: 5px !important;
            padding-right: 5px !important;
        }

        div.dataTables_wrapper div.dataTables_filter label {
            font-size: small !important;
        }

        div.dataTables_wrapper div.dataTables_filter input {
            height: -20px !important;
        }

        div.dataTables_wrapper div.dataTables_info {
            padding: 0px !important;
            font-size: small !important;
        }

        div.dataTables_wrapper div.dataTables_paginate ul.pagination {
            /* margin-top: -20px !important;*/
        }

        div.dataTables_wrapper div.dataTables_paginate {
            font-size: small !important;
        }

        .remove {
            cursor: pointer;
            color: red;
        }

        button, a {
            cursor: pointer;
        }
    </style>
</head>

<body>
    <br />
    <form id="addpurchaseAsyncVP" tabindex="0">
        <div class="modal fade custom-modal-width" id="AddVendorModal" data-backdrop="static" data-keyboard="false" role="dialog" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content" style="width:45vw;">
                    <div class="modal-body">
                        <!-- Content for Schedule Modal -->
                    </div>
                </div>
            </div>
        </div>
        <!--this is things that are hidden-->
        @Html.HiddenFor(model => model.BalanceAmount)
        @Html.HiddenFor(model => model.StatusId)
        <div class="card" id="purchasediv" style="padding:10px">
            <div class="row">
                <div class="col-sm-4">
                    <h2>@ViewBag.Title</h2>
                </div>

            </div>
            <hr />
            <div class="card-body" style="padding:0;">
                <!--first row for bill no , vendor name and transaction date-->
                <div class="form-row d-flex align-items-center pl-1">
                    <div class="form-group col-md-2 d-flex align-items-center">
                        <div class="custom-control custom-switch custom-switch-off-danger custom-switch-on-success">
                            <input type="checkbox" class="custom-control-input" id="ishsnapplied">
                            <label class="custom-control-label" for="ishsnapplied">Is GST applied?</label>
                        </div>
                    </div>

                    <div class="form-group col-md-3 d-flex">
                        <label for="BillNumber">Bill No. <span class="mandatoryField">*</span>:</label>
                        @Html.EditorFor(model => model.BillNumber, new { htmlAttributes = new { @class = "form-control col-md-8", @maxlength = "20" } })
                    </div>

                    <div class="form-group col-md-4 d-flex align-items-center">
                        <label for="VendorCode" class="mr-2">Vendor Name <span class="mandatoryField">*</span>:</label>
                        @if (IsitEdit)
                        {
                            @Html.TextBoxFor(model => model.VendorName, new { @class = "form-control", @disabled = "disabled" })
                        }
                        else
                        {
                            @Html.DropDownListFor(
                                model => model.VendorCode,
                                new SelectList(ViewBag.Vendoerlist ?? new List<SelectListItem>(), "Value", "Text"),
                                "Select Vendor",
                                new { @class = "form-control", id = "VendorCode" }
                            )
                            <a href="javascript:void(0);" class="icon ml-2" id="btnaddvendor">
                                <video width="40" playsinline loop>
                                    <source src="~/Content/Admin/icon/add.mp4" type="video/mp4">
                                </video>
                            </a>
                        }
                    </div>

                    <div class="form-group col-md-3 d-flex">
                        <label for="TransactionDate">Date <span class="mandatoryField">*</span>:</label>
                        @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control col-md-8", @id = "TransactionDate", @type = "date" } })
                    </div>
                </div> 
                <div class="card">
                    <div class="card-title">
                        <h3>List Items of Purchase </h3>
                    </div>
                    <div class="card-body" style="padding:0;">
                        <!--this row contains item name,hsn category,quantity-->
                        <div class="table-container">
                            <div class="col-lg-12 form-group table-responsive" style="margin-bottom:0;">
                                <table class="table table-bordered wrapper" id="tblpurchaseitem">
                                    <thead>
                                        <tr>
                                            <th style="width:3%;">No.</th>
                                            <th hidden>Item Id </th>
                                            <th hidden>Transaction code</th>
                                            <th style="width: 25%;">Item Name  <span class="mandatoryField">*</span></th>
                                            <th style="width: 20%;">HSN Code <span class="mandatoryField">*</span></th>
                                            <th style="width: 14%;">Quantity <span class="mandatoryField">*</span></th>
                                            <th style="width: 12%;">Unit Price (@currency) <span class="mandatoryField">*</span></th>
                                            <th style="width: 10%;">Discount(%) <span class="mandatoryField">*</span></th>
                                            <th style="width: 30%;">Applied Tax(%) <span class="mandatoryField">*</span></th>
                                            <th style="width: 0%;">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td><span class="serialnumber">01</span></td>
                                            <td hidden class="ItemId">
                                                <input type="text" class="form-control" />
                                            </td>
                                            <td hidden class="TransactionCode">
                                                <input type="text" class="form-control" />
                                            </td>
                                            <td class="ItemName">
                                                <div class="input-group ">
                                                    <input type="text" class="form-control" placeholder="Item Name" maxlength="250" />
                                                </div>
                                            </td>
                                            <td class="HSNCode">
                                                <div class="input-group ">
                                                    <select class="form-control select2">
                                                        <option value="">Select HSNCode</option>
                                                        @foreach (var item in ViewBag.HSNCode)
                                                        {
                                                            <option value="@item.Value">@item.Text</option>
                                                        }
                                                    </select>
                                                </div>
                                            </td>
                                            <td class="Quantity">
                                                <div class="input-group">
                                                    <select class="form-control" aria-label="Unit" style="max-height: 150px;">
                                                        <option value="number">number</option>
                                                        <option value="kg">kg</option>
                                                        <option value="g">g</option>
                                                        <option value="mg">mg</option>
                                                        <option value="ltr">ltr</option>
                                                        <option value="ml">ml</option>
                                                        <option value="m">m</option>
                                                        <option value="cm">cm</option>
                                                        <option value="mm">mm</option>
                                                        <option value="in">in</option>
                                                        <option value="ft">ft</option>
                                                        <option value="yd">yd</option>
                                                        <option value="sq_m">sq m</option>
                                                        <option value="sq_cm">sq cm</option>
                                                        <option value="sq_in">sq in</option>
                                                        <option value="sq_ft">sq ft</option>
                                                        <option value="cu_m">cu m</option>
                                                        <option value="cu_cm">cu cm</option>
                                                        <option value="cu_in">cu in</option>
                                                        <option value="cu_ft">cu ft</option>
                                                    </select>
                                                    <input type="text" placeholder="eg.5" class="form-control">
                                                </div>
                                            </td>
                                            <td class="UnitPrice">
                                                <div class="input-group ">

                                                    <input type="text" placeholder="Unit price" class="form-control" />
                                                </div>
                                            </td>
                                            <td class="Discount">
                                                <div class="input-group ">

                                                    <input type="text" placeholder="eg. 10" class="form-control" />
                                                </div>
                                            </td>
                                            <td class="AppliedTax">
                                                <div class="input-group ">

                                                    <select class="form-control">
                                                        <option>No tax</option>
                                                    </select>
                                                </div>
                                            </td>
                                            <td colspan="2" class="remove" style="justify-content:center">
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="row" style="justify-content:center">
                            <button type="button" class="btn" id="addRowButton" style="display:flex">
                                <img src="~/Content/Admin/icon/Add.jpeg" width="30" />
                            </button>
                        </div>
                    </div>
                </div>
                <section class="seccalculations" id="divptmDetails">
                    <table class="tblpymtDtl">
                        <tr>
                            <th class=" col-md-6" style="background-color: #eeeeee00;">Amount :</th>
                            <td class="white col-md-6"> <span class="currency">@currency</span> <span class="pymamt">0</span></td>
                        </tr>
                        <tr>
                            <th class=" col-md-6" style="background-color:white">Discount :</th>
                            <td class="white col-md-6 Discount"> <span class="currency">@currency</span> <span class="pymdiscount">0</span></td>
                        </tr>
                        <tr>
                            <th class=" col-md-6 AppliedTax" style="background-color: #eeeeee00;">Tax Amount :</th>
                            <td class="white col-md-6 AppliedTax"><span class="currency">@currency</span> <span class="pymtotaltax">0</span></td>
                        </tr>
                        <tr>
                            <th class=" col-md-6" style="background-color:white">Total Amount :</th>
                            <td class="white col-md-6"> <span class="currency">@currency</span><span class="pymtotalamt">0</span> </td>
                        </tr>
                    </table>
                </section>
                <br />
                <!--here the description and the colapse for the add voucher and payment details-->
                @* description box for the purchase*@
                <div class="row">
                    <label for="Description" class="col-md-2" style="text-align: center;">
                        Description
                        <span class="mandatoryField">*</span>:
                    </label>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 2, required = "required" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!--here will the save and cancel buttons-->
                <br />
                <div style="text-align:center;">

                    @if (IsitEdit)
                    {
                        <button id="btnupdate" title="update the purchase..!" class="btn btn-primary">Update</button>

                    }
                    else
                    {
                        <button id="btnsave" title="Save the purchase..!" class="btn btn-success">Save</button>
                    }

                    <button id="btncancel" title="Cancel it..!" class="btn btn-danger">Cancel</button>

                </div>

            </div>
        </div>
        @*--------------------------------payment section----------------------*@
        <div id="accordion" width="50uv">
            <div class="card" style="margin-top:1vw;">
                <div class="card-header">
                    <h2>Pay for Purchase</h2>
                </div>
                <div class="card-body">

                    <div class="row">
                        <div class="col-md-4">
                            <label style="font-weight:400;">Purchase Voucher No. : </label>
                            <label id="vchptmtransactioncode" class="control-label"> </label>
                        </div>
                        <div class="col-md-4">
                            <label style="font-weight:400;">Vendor Name : </label>
                            <label id="ptmvendorname" class="control-label"></label>
                        </div>
                        <div class="col-md-4">
                            <label style="font-weight:400;">Transaction date : </label>
                            <label id="ptmtransactiondate" class="control-label"> </label>
                        </div>
                    </div>
                    <br />
                    <section class="secCalculationsPtm">
                        <div class="row" id="divptmDetails">
                            <table class="tblpymtDtl">
                                <tr></tr>
                                <tr>
                                    <th class=" col-md-6" style="background-color: #eeeeee00;">Amount :</th>
                                    <td class="white col-md-6"> <span class="currency">@currency</span> <span class="pymamt">0</span></td>
                                </tr>
                                <tr>
                                    <th class=" col-md-6" style="background-color:white">Discount :</th>
                                    <td class="white col-md-6 Discount"> <span class="currency">@currency</span> <span class="pymdiscount">0</span></td>
                                </tr>
                                <tr>
                                    <th class=" col-md-6 AppliedTax" style="background-color: #eeeeee00;">Tax Amount :</th>
                                    <td class="white col-md-6 AppliedTax"><span class="currency">@currency</span> <span class="pymtotaltax">0</span></td>
                                </tr>

                                <tr>
                                    <th class=" col-md-6 " style="background-color:white">Total Amount :</th>
                                    <td class="white col-md-6 "> <span class="currency">@currency</span><span class="pymtotalamt" id="pymtotalamt">0</span> </td>
                                </tr>
                            </table>
                        </div>
                    </section>
                    <!--this feild is for the checking the form is match voucher of voucherModule-->
                    <input type="hidden" id="Context" value="matchVoucher" /> <!-- Set to "voucherModule" or "matchVoucher" -->

                    <br />
                    <div class="row">
                        <div class="input-group col-md-5" style="padding-bottom: 1vw;">
                            <label for="VoucherCode" class="label-comtrol col-md-3">Vouchers<span class="mandatoryField">*</span> :</label>
                            <div class="col-md-8">
                                <select id="VoucherCode" class="form-control" multiple="multiple" title="Please select at least one voucher" onchange="updateTotalAmount()">
                                    @if (ViewBag.VoucherCode != null)
                                    {
                                        foreach (var voucher in ViewBag.VoucherCode)
                                        {
                                            <option value="@voucher.Value">@voucher.Text</option>
                                        }
                                    }

                                </select>
                                @Html.ValidationMessageFor(model => model.VoucherCode, "", new { @class = "text-danger" })

                            </div>
                            <span>
                                <a href="javascript:void(0);" class="icon" id="addvoucherButton">
                                    <video width="40" muted playsinline loop>
                                        <source src="~/Content/Admin/icon/add.mp4" type="video/mp4">
                                    </video>
                                </a>
                            </span>
                        </div>
                        <div class="col-md-4">
                            <div class="input-group ">
                                <label class="control-label col-md-4" for="TransactionAmount">Paid Amount <span class="mandatoryField">*</span>:</label>
                                <div class="input-group-prepend ">
                                    <span class="input-group-text">
                                        <i class="fas fa-rupee-sign"></i>
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.TransactionAmount, "", new { htmlAttributes = new { @class = "form-control col-md-6", @onfocusout = "calculateBalance()" } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <table id="tblvoucherdtl">
                                <tr>
                                    <td>Voucher Amount :</td>
                                    <td>
                                        <span>@currency</span>
                                        <span id="totalAmountLabel">0.00</span>
                                    </td>

                                </tr>
                            </table>
                        </div>
                    </div>
                    @* description box for the voucher description*@
                    <div class="row">
                        <label for="txtDescription" class="label-comtrol col-md-2" style="text-align: center;">Description<span class="mandatoryField">*</span> :</label>
                        <div class="col-md-10">
                            <textarea id="txtDescription" rows="2" class="form-control"></textarea>
                        </div>
                    </div>
                    <br />
                    <!--here will the save and cancel buttons-->
                    <div style="text-align:center;">
                        <input type="button" id="btnptmsave" class="btn btn-success " value="Submit" />
                        <input type="button" class="btn btn-danger" id="btnptmcancel" value="Cancel" />
                    </div>
                    <br />
                </div>
                <!--card body end-->
            </div>

        </div>
        <!--payment div end-->
        <div id="hideforever">
            @Html.EditorFor(model => model.TransactionCode, new { htmlAttributes = new { @class = "form-control col-md-4", @readonly = true } })
        </div>
        <!--div for the -->
        <div class="modal fade" id="BankModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="BankModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="BankModalLabel">Add Voucher</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <!--scripts here by vishal pardeshi-->
    <!--datatable scripts here-->
    <!--------------------------------------------------------------------------script here----------------------------------------------------------------------------->
    <script>
        jQuery(document).ready(function ($) {
            $.when(
                $.getScript('@Url.Content("~/Content/plugins/select2/js/select2.full.min.js")')
            ).done(function () {
                $('#VendorCode').select2({
                    placeholder: "Select Vendor ",
                    allowClear: true,
                    //maximumSelectionLength: 1,
                    width: '100%'

                });
                $('#VoucherCode').select2({
                    placeholder: "Select voucher",
                    allowClear: true
                });
            }).fail(function () {
                console.error("Failed to load Select2");
            });
            // Event listener for the checkbox
            $("#ishsnapplied").change(function () {
                forRadioButton();
            });
            //hiding the columns initially
            hideGSTColumns();
        });
    </script>
    <!--script for input validations and other-->
    <script>
        $(document).ready(function () {
            $('#BillNumber').on('input', function () {
                var enteredValue = $(this).val();
                var validValue = enteredValue.replace(/[^a-zA-Z0-9]/g, '');
                $(this).val(validValue);
            });
            $('#tblpurchaseitem').on('input', '.Quantity input', function () {
                var enteredValue = $(this).val();
                var numericValue = enteredValue.replace(/[^0-9.]/g, '');
                var decimalIndex = numericValue.indexOf('.');
                if (decimalIndex !== -1) {
                    numericValue = numericValue.substring(0, decimalIndex + 1) +
                        numericValue.substring(decimalIndex + 1).replace(/[^0-9]/g, '').substring(0, 2);
                }
                var floatValue = parseFloat(numericValue);
                if (!isNaN(floatValue)) {
                    if (floatValue > 100000) {
                        numericValue = '100000';
                    } else if (floatValue === 0 || floatValue < 1) {
                        displayToast("Please provide a valid quantity", "error");
                        numericValue = '1';
                    }
                } else {
                    numericValue = '';
                }
                $(this).val(numericValue);
                updateTotals();
            });

            $('#tblpurchaseitem').on('input', '.UnitPrice input', function () {
                var enteredValue = $(this).val();
                var numericValue = enteredValue.replace(/[^\d.]/g, '');
                if (numericValue.length > 10) {
                    numericValue = '1000000000';
                }
                if (parseFloat(numericValue) == 0) {
                    displayToast("Please provide valid unit price", "error");
                    numericValue = '1';
                }
                $(this).val(numericValue !== '' ? numericValue : '');
                updateTotals();
            });
            $('#tblpurchaseitem').on('input', '.Discount input', function () {
                var enteredValue = $(this).val();
                var numericValue = enteredValue.replace(/[^\d.]/g, '');
                if (parseFloat(numericValue) > 100) {
                    numericValue = '100';
                }
                $(this).val(numericValue !== '' ? numericValue : '');
                updateTotals();
            });

            $('#TransactionAmount').on('input', function () {
                var enteredValue = $(this).val();
                var amount = $('#pymtotalamt').text();
                var numericValue = enteredValue.replace(/[^\d.]/g, '');
                if (numericValue.length > 10) {
                    numericValue = numericValue.substring(0, 10);
                }
                if (parseFloat(numericValue) > parseFloat(amount)) {
                    numericValue = amount;
                }
                $(this).val(numericValue);
            });
            $('#ptmtransactioncode').text($('#TransactionCode').val());
            $('#VendorCode').on('blur', function () {
                var VendorCode = $(this).val();
                $('#ptmvendorname').text(VendorCode);
            });
            $('#TransactionDate').on('blur', function () {
                var transactionDate = $(this).val();
                $('#ptmtransactiondate').text(transactionDate);
            });
            //function preventBack() {
            //    window.history.forward();
            //}
            //setTimeout("preventBack()", 0);
            //window.onunload = function () { null };
        });
    </script>
    <!--date vaildation here-->
    <script>
        /*  jQuery.noConflict();*/
        jQuery(document).ready(function ($) {
            var today = new Date();
            var sevenDaysAgo = new Date();
            sevenDaysAgo.setDate(today.getDate() - 7);

            var formattedToday = today.toISOString().split('T')[0];
            var formattedSevenDaysAgo = sevenDaysAgo.toISOString().split('T')[0];

            $('#TransactionDate').val(formattedToday);

            $('#TransactionDate').attr('max', formattedToday);

            $('#TransactionDate').attr('min', formattedSevenDaysAgo);
            updateTotals();

        });
    </script>

    <!--making the event for the selecting the tax from hsn code based on the intra or inter state above question-->
    <script>
        $(document).ready(function () {
            $('#tblpurchaseitem').on('change', '.HSNCode select', function () {
                var row = $(this).closest('tr');
                var hsnCode = $(this).val();
                let vendorcode = $('#VendorCode option:selected').val();
                let upvendorcode = '@ViewBag.VendorCode'.toString();
                if (hsnCode != null && (vendorcode != "" || upvendorcode != null)) {
                    vendorcode = vendorcode ?? (upvendorcode!=null ? upvendorcode : vendorcode);
                    getappliectax(hsnCode, row, vendorcode);
                } else {
                    displayToast("please select vendor", "warning");
                }

            });
        });

        $('#VendorCode').on('change', function () {
            const vendorcode = $(this).val();
            const hsncode = $('.HSNCode select option:selected').val();
            var row = $('.HSNCode select').closest('tr');
            if (vendorcode != "" && hsncode != null) {
                getappliectax(hsncode, row, vendorcode);
            }
        })
    </script>
    <!--script for the add item button and calculating the total amount-->
    <script>
        function updateTotals() {
            var totalAmount = 0;
            var totalDiscount = 0;
            var totalTax = 0;

            $("#tblpurchaseitem tbody tr").each(function () {
                var quantity = parseFloat($(this).find('.Quantity input').val()) || 0;
                var unitPrice = parseFloat($(this).find('.UnitPrice input').val()) || 0;
                var discount = parseFloat($(this).find('.Discount input').val()) || 0;
                var tax = parseFloat($(this).find('.AppliedTax select option:selected').val()) || 0;


                var rowAmount = quantity * unitPrice;
                var rowDiscountAmount = rowAmount * (discount / 100);
                var rowDiscountedAmount = rowAmount - rowDiscountAmount;
                var rowTaxAmount = rowDiscountedAmount * (tax / 100);

                totalAmount += rowAmount;
                totalDiscount += rowDiscountAmount;
                totalTax += rowTaxAmount;
            });

            var totalPayable = totalAmount - totalDiscount + totalTax;

            // Update display values
            $(".pymamt").html(totalAmount.toFixed(2));
            $(".pymdiscount").html(totalDiscount.toFixed(2));
            $(".pymtotaltax").html(totalTax.toFixed(2));
            $(".pymtotalamt").html(totalPayable.toFixed(2));
            $("#BalanceAmount").val(totalPayable.toFixed(2));
        }


        function addrow() {
            var $clone = $("#tblpurchaseitem tbody tr:first").clone();

            $clone.find('input').val('');
            $clone.find('select').prop('selectedIndex', 0);

            $clone.find('.remove').html(`
                    <a href="javascript:void(0);" class="icon" onclick="removeRow(this, $(this).closest('tr').find('.ItemId input').val())">
                        <video width="30" playsinline loop>
                            <source src="@Url.Content("~/Content/Admin/icon/Delete%202.mp4")" type="video/mp4" />
                            Your browser does not support the video tag.
                        </video>
                    </a>
                `);

            $("#tblpurchaseitem tbody").append($clone);

            $("#tblpurchaseitem tbody tr").each(function (index) {
                $(this).find('td:first').text(String(index + 1).padStart(2, '0'));
            });
        }
        // Attach addrow function to the button click event
        $(document).ready(function () {
            $("#addRowButton").click(function () {
                if (validateRow()) {
                    addrow();
                    updateTotals();
                }
                else {
                    displayToast("Please fill in all the fields before adding a new row.", "error");
                }
                /*calculateTotals();*/
                calculateBalance();
            });
            $("#tblpurchaseitem").on('change', '.AppliedTax select', function () {
                updateTotals();
            });
        });

        $(document).on('ready', function () {
            updateTotals();
            calculateBalance();
        });
    </script>
    <!--validation for save button-->
    <script>

        //function for updating the total
        function updateTotalAmount() {
            //totalAmountLabel pymtotalamt
            var totalAmount = 0;
            var inputAmount = parseFloat($('.pymtotalamt').text()) || 0;

            $('#VoucherCode option:selected').each(function () {
                var text = $(this).text();
                var amountMatch = text.match(/^(.*?):(.*?):(.*?):([\d.]+)$/);
                if (amountMatch) {
                    totalAmount += parseFloat(amountMatch[4]);
                }
            });

            $('#totalAmountLabel').text(totalAmount.toFixed(2));

            if (totalAmount < inputAmount || totalAmount < 0) {
                $('#totalAmountLabel').css('color', 'red');
            } else {
                $('#totalAmountLabel').css('color', 'green');
            }

            if (totalAmount > inputAmount) {
                $('#VoucherCode option:not(:selected)').prop('disabled', true);
            } else {
                $('#VoucherCode option').prop('disabled', false);
            }

            if (totalAmount == 0) {
                $('#totalAmountLabel').text(0);
            }
        }
        function getdatatoPayment() {
            debugger;
            if ('@IsitEdit'.toString() == 'True') {
                $('#vchptmtransactioncode').text($('#TransactionCode').val());
                $('#ptmtransactiondate').text($('#TransactionDate').val());
                $('#ptmvendorname').text($('#VendorName').val());
            }
            else {
                $('#ptmvendorname').text($('#VendorCode option:selected').text());
                $('#vchptmtransactioncode').text($('#TransactionCode').val());
                $('#ptmtransactiondate').text($('#TransactionDate').val());
            }

        }
        $('#btnsave').click(function (e) {
            e.preventDefault();
            $(this).prop("disabled", true);
            var isvalid = validationforSubmit() && validateRow();
            if (isvalid) {
                // Validate purchase
                var PurchaseCode = $('#TransactionCode').val();
                $.ajax({
                    url: '/Accountant/ValidatePurchaseAsyncVP',
                    type: 'POST',
                    data: { PurchaseCode: PurchaseCode },
                    success: function (response) {
                        if (response.success) {
                            // Confirm save
                            Swal.fire({
                                title: 'Are you sure?',
                                text: "The details will be saved.",
                                icon: 'question',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, go ahead!',
                                cancelButtonText: 'No, cancel!'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    const issavevalid = savePurchase();
                                    if (issavevalid) {
                                        displayToast("Purchase saved successfully!", "success");
                                        Swal.fire({
                                            title: 'Want to pay?',
                                            text: "The details are saved, you can pay for the purchase now.",
                                            icon: 'question',
                                            showCancelButton: true,
                                            confirmButtonColor: '#3085d6',
                                            cancelButtonColor: '#d33',
                                            confirmButtonText: 'Yes, pay now!',
                                            cancelButtonText: 'No, cancel!'
                                        }).then((result) => {
                                            if (result.isConfirmed) {
                                                getdatatoPayment();
                                                $('#purchasediv').hide();
                                                $('#accordion').show();
                                                fetchvoucher();
                                            } else {
                                                //redirect to the detaisl gridview
                                                window.location.href = '@Url.Action("DetailsPurchaseAsyncVP")';
                                            }
                                        });
                                    } else {
                                        displayToast("There was a problem saving the purchase.", "error");
                                        $(this).prop("disabled", false);

                                    }
                                }
                            });
                        } else {
                            // If not successful, show a Swal to pay or go back
                            Swal.fire({
                                title: 'Purchase already saved?',
                                text: "You can pay for the purchase now or later.",
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, pay now!',
                                cancelButtonText: 'No, pay later!'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    // Show payment section and fetch vouchers
                                    getdatatoPayment();
                                    $('#purchasediv').hide();
                                    $('#accordion').show();
                                    fetchvoucher();
                                } else {
                                    window.location.href = '@Url.Action("DetailsPurchaseAsyncVP")';
                                    $(this).prop("disabled", false);

                                }
                            });
                        }
                    },
                    error: function () {
                        displayToast("An error occurred during validation.", "error");
                    }
                });
            } else {
                //displayToast("please fill the apropriate details..!", "error");
                $(this).prop("disabled", false);
            }
        });



    </script>
    <!--div show after click on save button-->
    <!--cancel button  -->
    <script>
        $('#btncancel').on('click', function (e) {
            $(this).prop("disabled", true);
            e.preventDefault();
            Swal.fire({
                title: 'Are you sure?',
                text: "You will be redirected to the purchase details page.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, go ahead!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '@Url.Action("DetailsPurchaseAsyncVP")';
                }
                else {
                    $(this).prop("disabled", false);
                }
            });
        });
        $('#btnptmcancel').on('click', function (e) {
            $(this).prop("disabled", true);
            e.preventDefault();
            Swal.fire({
                title: 'Are you sure?',
                text: "You will be redirected to the purchase details page.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, go ahead!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '@Url.Action("DetailsPurchaseAsyncVP")';
                }
                else {
                    $(this).prop("disabled", false);
                }
            });
        });
    </script>



    <!--script for the voucher dropdown-->
    <script>
        $('#VoucherCode').on('change', function () {
            var selectedText = $('#VoucherCode option:selected').text();
            var matches = selectedText.match(/^(CHEQUE):.*?:.*?:([\d.]+)$/);
            var amount = matches ? parseFloat(matches[2]) : null;
            if (matches) {
                $('#TransactionAmount').val(amount).prop('disabled', true);
            } else if (selectedText === 'Select voucher') {
                $('#TransactionAmount').val('').prop('disabled', false);
            } else {
                $('#TransactionAmount').val('').prop('disabled', false);
            }
            updateTotalAmount();
        });
    </script>

    <!--script for submit button of payment-->
    <script>

        $('#btnptmsave').on('click', function (e) {
            e.preventDefault();
            $(this).prop("disabled", true);
            var TranscationCode = $('#TransactionCode').val();
            var selectedVouchers = $('#VoucherCode option:selected');
            const payableamt = parseFloat($('.pymtotalamt').text());
            var paidAmount = parseFloat($('#TransactionAmount').val());
            const voucheramount = parseFloat($('#totalAmountLabel').text().replace(/[^0-9.-]+/g, ''));
            // Ensure that paidAmount is a valid number and greater than 0
            if (selectedVouchers.length > 0 && !isNaN(paidAmount) && paidAmount > 0 && paidAmount <= voucheramount && paidAmount <= payableamt) {
                // SweetAlert confirmation
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'Do you want to submit the selected vouchers?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, submit it!',
                    cancelButtonText: 'No, cancel!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $('#SubmitAmounts').prop('disabled', true);
                        var vouchers = [];
                        // Loop through selected vouchers to gather their codes and amounts
                        selectedVouchers.each(function () {
                            var voucherText = $(this).text();
                            const regex = /^(.*?):(.*?):(.*?):([\d.]+)$/;
                            const match = voucherText.match(regex);
                            const voucherNumber = match[2].trim();
                            const amount = parseFloat(match[4]);

                            vouchers.push({
                                VoucherCode: voucherNumber,
                                Amount: amount
                            });
                        });

                        // Send the data to the server
                        $.ajax({
                            url: '@Url.Action("MatchVoucherAsyncVM", "Accountant")',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({
                                TranscationCode: TranscationCode,
                                TransactionAmount: paidAmount,
                                vouchers: vouchers,
                                Description: Description
                            }),
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire({
                                        position: "center",
                                        icon: "success",
                                        title: "Successful",
                                        text: "Payment saved successfully!",
                                        showConfirmButton: false,
                                        timer: 3000
                                    }).then(() => {

                                        window.location.href = response.redirectUrl;

                                    });
                                } else {
                                    displayToast(response.message || 'Error allocating amount.', "error");
                                    $('#SubmitAmounts').prop('disabled', false);
                                }
                            },
                            error: function (xhr, status, error) {
                                displayToast('An error occurred while processing your request.', "error");
                                $('#SubmitAmounts').prop('disabled', false);
                            }
                        });
                    }
                    else {
                        $(this).prop("disabled", false);
                    }
                });
            } else {
                toastr.error('Please select vouchers and enter a valid paid amount or amount less than or equal to payble amount.');
                $(this).prop("disabled", false);
            }
        })
    </script>
    <!------------------------------------------------------------------------------update scripts------------------------------------------------------------>
    <script>
        $(document).ready(function () {
            var check = '@IsitEdit'.toString();
             var checkgst = '@IsGSTBill'.toString();
            if (check === "True") {
                let vendorcode = '@ViewBag.VendorCode'.toString();
                getPurchasedItems();
                //now make all the feilds unavialable
                $('#BillNumber').attr("readonly", "readonly");
                $('#TransactionDate').attr("readonly", "readonly");
                $("#addRowButton").attr("disabled", true);
                if (checkgst === "True") {
                    $("#ishsnapplied").prop("checked", true);
                    $("#ishsnapplied").attr("disabled", true);
                    forRadioButton();
                }
                else {
                    $("#ishsnapplied").attr("disabled", true);
                }
            }
            else {
                $("#ishsnapplied").attr("disabled", false);
            }

        });
        function getPurchasedItems() {
            var listOfItems = @Html.Raw(Json.Encode(ViewBag.ListofItems));
            var $tableBody = $('#tblpurchaseitem tbody');
            const vendorcode = '@ViewBag.VendorCode'.toString();
            //get the item tax here for update
            listOfItems.forEach(function (item, index) {
                if (index > 0) {
                    addrowupdate();
                }
                var $row = $tableBody.find('tr').eq(index);
                getappliectax(item.HSNCode, $row, vendorcode)
                $row.find('.ItemId input').val(item.ItemId);
                $row.find('.TransactionCode input').val(item.TransactionCode);
                $row.find('.ItemName input').val(item.ItemName);
                $row.find('.HSNCode select').val(item.HSNCode);
                var unitSelect = $row.find('.Quantity select');
                if (unitSelect.find(`option[value="${item.Unit}"]`).length > 0) {
                    unitSelect.val(item.Unit).change();
                } else {
                    unitSelect.val('number').change();
                }
                $row.find('.Quantity input').val(item.Quantity);
                $row.find('.UnitPrice input').val(item.UnitPrice);
                $row.find('.Discount input').val(item.Discount);
                updateTotals();
            });

        }
    </script>
    <!--update button code-->
    <script>
        $(document).ready(function () {
            $('#btnupdate').on('click', function (e) {
                e.preventDefault();
                $(this).prop("disabled", true);
                var isvalid = validationforSubmit() && validateRow();
                if (isvalid) {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'Do you want to update the above details?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, update it!',
                        cancelButtonText: 'No, cancel!'
                    }).then((willUpdate) => {
                        if (willUpdate.isConfirmed) {
                            const issuccess = updatePurchase();
                            if (issuccess) {
                                displayToast("saved successfully..!", "success");
                                Swal.fire({
                                    title: 'Want to Pay ?',
                                    text: "The details are saved , you can pay for purchase now.",
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Yes, pay now!',
                                    cancelButtonText: 'No, cancel!'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        getdatatoPayment();
                                        $('#purchasediv').hide();
                                        $('#accordion').show();
                                        fetchvoucher();
                                    }
                                    else {
                                        window.location.href = '@Url.Action("DetailsPurchaseAsyncVP")';
                                    }
                                });
                            }
                        }
                        else {
                            $(this).prop("disabled", false);
                        }
                    });
                }
            });
        });
        function validationforSubmit() {
    //checking the validations here
    // Get values from modal form
    var billno = $("#BillNumber").val();
    var VendorCode = $("#VendorCode option:selected").text();
    var transactiondate = $('#TransactionDate').val();
    var Description = $('#Description').val();

    //Validation for required fields
    if ('@IsitEdit'.toString() == 'True') {
        if (!billno || !transactiondate || !Description) {
            // Show validation error
            let erromsg = "";
            !billno ? erromsg += " Please fill the bill number..!" : null;
            !transactiondate ? erromsg += " Please select the date..!" : null;
            !Description ? erromsg += " Please fill the description..!" : null;

            Swal.fire({
                title: 'Invalid Input',
                text: erromsg,
                icon: 'error',
                confirmButtonText: 'OK'
            });
            return false;
        }
        return true;
    }
    else {
        if (!billno || !VendorCode || VendorCode == "Select Vendor" || !transactiondate || !Description) {
            // Show validation error
            let erromsg = "";
            !billno ? erromsg += " Please fill the bill number..!" : null;
            VendorCode == "Select Vendor" ? erromsg += " Please select the vendor name..!" : null;
            !transactiondate ? erromsg += " Please select the date..!" : null;
            !Description ? erromsg += " Please fill the description..!" : null;

            Swal.fire({
                title: 'Invalid Input',
                text: erromsg,
                icon: 'error',
                confirmButtonText: 'OK'
            });
            return false;
        }
        return true;
    }

}

    </script>
    <!--pop up script for the add vendot-->
    <script>

        var lastMessage = '';
        var lastType = '';

        function displayToast(message, type) {

            toastr.clear();
            toastr[type](message);

            lastMessage = message;
            lastType = type;
        }
        toastr.options = {
            closeButton: true,
            progressBar: true,
            positionClass: 'toast-top-right',
            showMethod: 'slideDown',
            timeOut: 4000
        };
        @*function fetchvoucher() {
            let VendorName
            if ('@IsitEdit'.toString() == 'True') { VendorName = $('#VendorName').val(); }
            else { VendorName = $('#VendorCode option:selected').text(); }

            $.ajax({
                url: '@Url.Action("ListVoucherAsyncVP", "Accountant")',
                type: 'GET',
                data: { VendorName: VendorName },
                success: function (response) {
                    if (response.success) {
                        var $voucherSelect = $('#VoucherCode');
                        $voucherSelect.empty();
                        $voucherSelect.append('<option>-select voucher-</option>');
                        $.each(response.data, function (i, voucher) {
                            $voucherSelect.append('<option value="' + voucher.Value + '">' + voucher.Text + '</option>');
                        });
                        displayToast("Fetched voucher", "success");
                    } else {
                        displayToast("An error occurred in ajax.", "error");
                    }
                },
                error: function (xhr, status, error) {
                    displayToast("An error occurred while fetching the vouchers.", "error");
                }
            });
        }*@
        @*function fetchvendor() {
            window.location.href = '@Url.Action("AddPurchaseAsyncVP", "Accountant")';
        }*@



    </script>
    <script>
        $(document).ready(function () {
            const modalSelector = '#AddVendorModal';
            const formSelector = '#frmAddVendor';

            // Open the Add Voucher modal
            $('#btnaddvendor').off('click').on('click', function () {
                $('#btnaddvendor').prop('disabled', true);
                $.ajax({
                    url: '@Url.Action("AddVendorAsyncVP", "Accountant")',
                    type: 'GET',
                    success: function (data) {
                        var $jq = jQuery.noConflict();
                        $jq(`${modalSelector} .modal-body`).html(data); // Populate modal body
                        $jq(modalSelector).modal('show');
                        $('#btnaddvendor').prop('disabled', false);

                    },
                    error: function () {
                        Swal.fire('Error', 'Failed to load the Add Voucher form.', 'error');
                        $('#btnaddvendor').prop('disabled', false);

                    }
                });
            });
            // Handle form submission
            $(document).on('submit', formSelector, function (e) {
                e.preventDefault();
                handleaddvendor(formSelector, modalSelector);
            });
            // Ensure the modal is cleaned up on close
            $('#AddVendorModal').on('hidden.bs.modal', function () {
                $(this).find('.modal-body').empty();
                $(this).find('form').off();
                //$('#VendorCode').focus();
                //windors.redirectUrl('Accountant/AddPurchaseAsyncVP');
            });
        });
    </script>
    <!--add voucher button  -->
    <script>
        $(document).ready(function () {
            const modalSelector = '#BankModal';
            const formSelector = '#AddVoucherForm';

            // Open the Add Voucher modal
            $('#addvoucherButton').off('click').on('click', function () {
                const amountFor = $('#TransactionAmount').val();
                const context = $('#Context').val();

                $.ajax({
                    url: '@Url.Action("AddVoucherAsyncSGS", "Accountant")',
                    type: 'GET',
                    data: { voucherType: 1, amount: amountFor, context: context },
                    success: function (data) {
                        $(`${modalSelector} .modal-body`).html(data); // Populate modal body
                        $(modalSelector).modal('show'); // Show the modal
                    },
                    error: function () {
                        Swal.fire('Error', 'Failed to load the Add Voucher form.', 'error');
                    }
                });
            });

            // Handle form submission
            $(document).on('submit', formSelector, function (e) {
                e.preventDefault();
                const context = $('#Context').val();

                handleVoucherFormSubmission(formSelector, context, modalSelector);
            });

            // Ensure the modal is cleaned up on close
            $(modalSelector).on('hidden.bs.modal', function () {
                $(`${modalSelector} .modal-body`).html(''); // Clear modal content
            });
        });

    </script>
</body>
</html>