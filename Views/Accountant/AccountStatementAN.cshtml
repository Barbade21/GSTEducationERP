@model GSTEducationERPLibrary.Accountant.Accountant

@{
    ViewBag.Title = "AccountStatementAN";
    Layout = "~/Views/Shared/_LayoutERP.cshtml";
    @Html.Partial("_LoadingOverlay")
}


<html lang="en" style="height: auto;">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">


    <!-- Theme style -->
    <script src="~/Content/plugins/jquery/jquery.min.js"></script>
    <script src="~/Content/plugins/bootstrap/js/bootstrap.min.js"></script>
    <link href="~/Content/plugins/fontawesome-free/css/all.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/Content/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/Content/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <link href="~/Content/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />

    <style>
        h2 {
            padding-top: 10px;
            margin-bottom: 8px;
            font-family: Verdana;
            font-weight: bold;
            font-size: medium;
            color: #33CCCC;
        }

        .dataTables_wrapper .btn-secondary {
            color: #235;
            background-color: transparent !important;
            border-color: transparent;
            font-size: x-large;
            margin: 0px !important;
        }

        .card-primary.card-outline-tabs > .card-header a.active {
            border-top: 3px solid #33CCCC;
        }

        a {
            color: #33CCCC;
        }

        .card.card-outline-tabs .card-header a:hover {
            color: #33CCCC;
        }

        .card-primary.card-outline-tabs > .card-header a.active, .card-primary.card-outline-tabs > .card-header a.active:hover {
            border-top: 3px solid #33CCCC;
        }

        .card-body {
            font-family: Calibri !important;
            padding-bottom: 0px !important;
            padding-top: 0px !important;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        th {
            background-color: #33CCCC;
            color: #000;
            text-align: center !important;
        }

        td {
            text-align: center;
            color: black !important;
        }

        .table td {
            padding: 0px 0px 0px 0px !important;
            font-size: 14px !important;
        }

        .table th {
            padding: 5px 5px 4px 10px !important;
            font-size: 14px !important;
        }

        table.dataTable > thead .sorting:after, table.dataTable > thead .sorting:before {
            font-size: xx-small !important;
        }

        div.dataTables_wrapper div.dataTables_filter {
            margin-top: -40px !important;
        }

        div.dt-buttons {
            /*margin-top: -20px !important;*/
        }

        .btn-group > .btn:not(:last-child):not(.dropdown-toggle), .btn-group > .btn-group:not(:last-child) > .btn {
            padding-left: 5px !important;
            padding-right: 5px !important;
        }

        div.dataTables_wrapper div.dataTables_filter label {
            font-size: small !important;
        }

        div.dataTables_wrapper div.dataTables_filter input {
            height: 20px !important;
        }

        div.dataTables_wrapper div.dataTables_info {
            padding: 0px !important;
            font-size: small !important;
        }

        div.dataTables_wrapper div.dataTables_paginate ul.pagination {
            margin-top: -20px !important;
        }

        div.dataTables_wrapper div.dataTables_paginate {
            font-size: small !important;
        }

        .page-item.active .page-link {
            z-index: 3;
            color: #fff;
            background-color: #64bbc9;
            border-color: #007bff;
        }
    </style>
</head>
<body style="margin: 0; padding: 0;">
    @using (Html.BeginForm("_ListAccountStatementAN", "Accountant"))
    {

        <br />
        <div class="card">
            <div class="col-md-6 text-left mt-1" style="padding-left:20px; padding-bottom:10px;">
                <h2>Bank Account Statement</h2>
            </div>
            @Html.HiddenFor(Model => Model.BankId)
            <div class="card" style="width:65%; margin: 0 auto;">
                <table>
                    <tr>
                        <td><p><strong>Bank Name:</strong> @Session["BankName"]</p></td>
                        <td><p><strong>IFSC Code:</strong> @Session["IFSCCode"]</p></td>

                    </tr>
                    <tr>
                        <td><p><strong>Account Holder:</strong> @Session["AccountHolderName"]</p></td>
                        <td><p><strong>Account Number:</strong> @Session["BankAccountNumber"]</p></td>
                    </tr>
                    <tr>

                        @{
                            var openingBalance = Session["OpeningBalance"] != null
                                                 ? Convert.ToDecimal(Session["OpeningBalance"])
                                                 : 0m;
                        }
                        <td>
                            <p><strong>Opening Balance:</strong> @string.Format(new System.Globalization.CultureInfo("en-IN"), "{0:N2} ₹", openingBalance)</p>
                        </td>
                        @*<td><p><strong>Opening Balance:</strong> @String.Format("{0:N2} ₹", Session["OpeningBalance"])</p></td>*@
                        <td><p><strong>Current Balance:</strong> @String.Format("{0:N2} ₹", Session["BankAmount"])</p></td>
                    </tr>
                </table>
            </div>

            <div class="card-body" style="padding-top:0px; ">
                <div class="row" style="margin-top:25px;">
                    <div class="col-6">
                        <div class="input-group">
                            <div class="col-md-12 row">
                                <div class="form-group row">
                                    <label for="startDate" class="col-md-4.3 col-form-label">Start Date</label>
                                    <div class="col-md-7.7">
                                        <input type="date" class="form-control" id="startDateFilter" name="startDate">
                                    </div>
                                </div>
                                <div class="form-group row" style="margin-left:2vw; ">
                                    <label for="endDate" class="col-md-4 col-form-label">End Date</label>
                                    <div class="col-md-8">
                                        <input type="date" class="form-control" id="endDateFilter" name="endDate">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="card-body" id="CashList"></div>
        </div>
    }




    <!-- DataTables  & Plugins -->
    <script src="~/Content/plugins/datatables/jquery.dataTables.min.js" type="text/javascript"></script>

    <script src="~/Content/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-responsive/js/dataTables.responsive.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-buttons/js/dataTables.buttons.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-buttons/js/buttons.bootstrap4.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/moment/moment.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="~/Content/plugins/jszip/jszip.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/pdfmake/pdfmake.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/pdfmake/vfs_fonts.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-buttons/js/buttons.html5.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-buttons/js/buttons.print.min.js" type="text/javascript"></script>
    <script src="~/Content/plugins/datatables-buttons/js/buttons.colVis.min.js" type="text/javascript"></script>

    <script src="~/Content/Admin/js/Icon.js"></script>
    <!--overlay script -->
    <script src="~/Content/Admin/js/overlay.js"></script>
    <script>
        document.getElementById('startDateFilter').addEventListener('change', function () {
            var startDate = this.value;
            var endDateInput = document.getElementById('endDateFilter');
            endDateInput.min = startDate; // Set the minimum selectable end date to the selected start date
            if (endDateInput.value && endDateInput.value < startDate) {
                endDateInput.value = ''; // Clear the end date if it is earlier than the start date
            }
        });
    </script>

    <script type="text/javascript">
 jQuery.noConflict();

    jQuery(document).ready(function ($) {

        var bankId = $("#BankId").val();
        // Load initial tab content
        loadTabContent('@Url.Action("_ListAccountStatementAN", "Accountant")',bankId );

        // Initialize and refresh filters
        refreshFilter();

        // Filter purchases based on status, start date, and end date
        function filterPurchases(status, startDate, endDate) {
            if (endDate) {
                endDate += " 23:59:59";
            }
            var url = '@Url.Action("FilterforStatementlist", "Accountant")' +
                '?status=' + encodeURIComponent(status) +
                '&startDate=' + encodeURIComponent(startDate) +
                '&endDate=' + encodeURIComponent(endDate);

            showLoadingOverlay();

            $.ajax({
                url: url,
                type: 'GET',
                success: function (data) {
                    $('#CashList').html(data);
                    initializeDataTable();
                },
                error: function () {
                    alert('Error loading filtered content.');
                },
                complete: function () {

                    hideLoadingOverlay();
                }
            });
        }

        // Load tab content based on status ID
        function loadTabContent(tabContentUrl, AccBankId) {
            $.ajax({
                url: tabContentUrl,
                data: { BankId: AccBankId },
                type: 'GET',
                success: function (data) {
                    $('#CashList').html(data);
                    initializeDataTable();
                },
                error: function () {
                    alert('Error loading content.');
                }
            });


        }

        // Initialize DataTables with buttons
        function initializeDataTable() {
            var table = $('#CashList table').DataTable({
                "responsive": true,
                "lengthChange": false,
                "autoWidth": false,
                "ordering": false, //asc desc Table Data ,
                "stateSave": true,
                "dom": 'Bfrtip',
                "buttons": [
                    {
                    extend: 'copy',
                    text: '<img src="/Content/Admin/icon/copy.png" title="Copy" alt="Copy" height="20" width="20" />',
                    titleAttr: 'Copy',
                    title: function () {
                        return "Cash Details";
                    },
                    messageTop: function () {
                        return 'Filtered Date Range: ' + $('#startDateFilter').val() + ' to ' + $('#endDateFilter').val();
                    },
                    messageBottom: function () {
                        return 'GayaSoft';
                    },
                    exportOptions: {
                        columns: ':not(:last-child)' // Exclude the last column (Action column)
                    }
                },
                {
                    extend: 'csv',
                    text: '<img src="/Content/Admin/icon/csv.jpg" title="CSV" alt="CSV" height="20" width="20" />',
                    titleAttr: 'CSV',
                    title: function () {
                        return "Cash Details";
                    },
                    messageTop: function () {

                        return  'Filtered Date Range: ' + $('#startDateFilter').val() + ' to ' + $('#endDateFilter').val();
                    },
                    messageBottom: function () {
                        return 'Gaya Soft';
                    },
                    exportOptions: {
                        columns: ':not(:last-child)' // Exclude the last column (Action column)
                    }
                },
                {
                    extend: 'excel',
                    text: '<img src="/Content/Admin/icon/xls-file.png" title="xls" alt="xls" height="20" width="20" />',
                    titleAttr: 'Excel',
                    title: function () {
                        return "Cash Details";
                    },
                    messageTop: function () {
                        return 'Filtered Date Range: ' + $('#startDateFilter').val() + ' to ' + $('#endDateFilter').val();
                    },
                    messageBottom: function () {
                        return 'Gaya Soft';
                    },
                    exportOptions: {
                        columns: ':not(:last-child)' // Exclude the last column (Action column)
                    }
                },
                {
                    extend: 'pdf',
                    text: '<img src="/Content/Admin/icon/pdf-file.png" title="pdf" alt="pdf" height="20" width="20" />',
                    titleAttr: 'PDF',
                    title: function () {
                        return "Cash Details";
                    },
                    customize: function (doc) {
                        // Set the table to stretch to full page width
                        var table = doc.content[1].table;
                        table.widths = '*'.repeat(table.body[0].length).split(''); // Equal width for all columns

                        // Get the current date and format it as Day/Month/Year
                        var today = new Date();
                        var formattedDate = today.getDate().toString().padStart(2, '0') + '/' +
                            (today.getMonth() + 1).toString().padStart(2, '0') + '/' +
                            today.getFullYear();

                        doc.content.splice(0, 0, {
                            text: 'GayaSoft\nFiltered Date Range: ' + $('#startDateFilter').val() + ' to ' + $('#endDateFilter').val() + '\nExported on: ' + formattedDate,
                            margin: [0, 0, 0, 12],
                            alignment: 'center',
                            fontSize: 10
                        });

                        doc.footer = function (currentPage, pageCount) {
                            return {
                                columns: [
                                    { text: 'Gaya Soft', alignment: 'left', margin: [20, 0] },
                                    { text: 'Page ' + currentPage.toString() + ' of ' + pageCount, alignment: 'right', margin: [0, 0, 20] }
                                ],
                                margin: [0, 0, 0, 12],
                                fontSize: 10
                            };
                        };
                    },
                    exportOptions: {
                        columns: ':not(:last-child)' // Exclude the last column (Action column)
                    }


                },
                {
                    extend: 'print',
                    text: '<img src="/Content/Admin/icon/printer.png" title="printer" alt="printer" height="20" width="20" />',
                    titleAttr: 'Print',
                    title: function () {
                        return "Cash Details";
                    },
                    messageTop: function () {
                        return 'Filtered Date Range: ' + $('#startDateFilter').val() + ' to ' + $('#endDateFilter').val() + '\nExported on: ' + new Date().toLocaleDateString('en-GB');
                    },
                    messageBottom: function () {
                        return 'Gaya Soft';
                    },
                    exportOptions: {
                        columns: ':not(:last-child)' // Exclude the last column (Action column)
                    }
                },
                {
                    extend: 'colvis',
                    text: '<img src="/Content/Admin/icon/column.jpg" title="column" alt="column" height="20" width="20" />',
                    titleAttr: 'Columns'
                }
            ]
        });
            table.buttons().container().appendTo('#CashList .col-md-6:eq(0)');
        }

        function initializeFilterEventHandlers() {
            var status = $('#statusFilter').val();
            var startDate = $('#startDateFilter').val();
            var endDate = $('#endDateFilter').val();

            $('#statusFilter').off('change').on('change', function () {
                var startDate = $('#startDateFilter').val();
                var endDate = $('#endDateFilter').val();
                status = $(this).val();
                filterPurchases(status, startDate, endDate);
            });

            $('#startDateFilter').off('change').on('change', function () {
                startDate = $(this).val();
                filterPurchases(status, startDate, endDate);
            });

            $('#endDateFilter').off('change').on('change', function () {
                var startDate = $('#startDateFilter').val();
                var endDate = $(this).val();

                filterPurchases(status, startDate, endDate);
            });



        }



        // Initialize filter event handlers

        initializeFilterEventHandlers();



        // Refresh filter with default dates and status
        function refreshFilter() {

            var today = new Date();
            // Calculate one year before the current date
            var before = new Date();
            before.setMonth(today.getMonth());
            before.setDate(1); // Set the date to the first day of the next month

            // Format dates as YYYY-MM-DD strings
            var startDate = formatDate(before);
            var formattedEndDate = formatDate(today);

            // Set the values of start date and end date inputs
            $('#startDateFilter').val(startDate);
            $('#endDateFilter').val(formattedEndDate);


            $('#startDateFilter').attr('max', formattedEndDate);
            $('#endDateFilter').attr('max', formattedEndDate);  // used to validate end date as a till today not tommarow
            $('#endDateFilter').attr('min', startDate);
            // Other JavaScript code goes here...

            // Function to format date as YYYY-MM-DD
            function formatDate(date) {
                var month = String(date.getMonth() + 1).padStart(2, '0');
                var day = String(date.getDate()).padStart(2, '0');
                var year = date.getFullYear();

                return year + '-' + month + '-' + day;
            }
            $('[data-toggle="tooltip"]').tooltip();

            // Initial load of Bank Transactions with default dates and status
            var status = $('#statusFilter').val();
            var startDate = $('#startDateFilter').val();
            var endDate = $('#endDateFilter').val();

            filterPurchases(status, startDate, endDate);
        }
    });
    </script>
</body>
</html>

