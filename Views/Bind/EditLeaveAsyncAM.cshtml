@model GSTEducationERPLibrary.Bind.Bind

<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="~/Content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/Content/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/Content/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <script src="~/Content/plugins/jquery/jquery.min.js" type="text/javascript"></script>
    <link href="~/Content/plugins/bs-stepper/css/bs-stepper.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Bootstrap 4 -->
    @*<script src="~/Content/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>*@
    <script src="~/Content/plugins/moment/moment.min.js"></script>
    <link href="~/Content/plugins/icheck-bootstrap/icheck-bootstrap.min.css" rel="stylesheet" />
    <!-- Tempusdominus Bootstrap 4 -->
    <link rel="stylesheet" href="~/Content/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <!-- Theme style -->
    <link href="~/Content/plugins/fontawesome-free/css/all.min.css" rel="stylesheet" />

    <script src="~/Content/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <script src="~/Content/plugins/daterangepicker/daterangepicker.js"></script>
    <link rel="stylesheet" href="~/Content/plugins/toastr/toastr.min.css">
    <script src="~/Content/plugins/toastr/toastr.min.js"></script>
    <style>
        input[readonly] {
            background-color: #e9ecef; /* Light grey background color */
            cursor: not-allowed; /* Change cursor to indicate it's not editable */
        }
    </style>
    <script src="~/Content/plugins/jquery/jquery.min.js"></script>
</head>
<body>
    <div class="card-body" id="EApplyLeaveForm">
        @using (Html.BeginForm("EditLeaveAsyncAM", "Bind", FormMethod.Post, new { enctype = "multipart/form-data", id = "Eleaveform" }))
        {@Html.AntiForgeryToken() <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-4">
                        <div class="input-group leaveform" id="EleavetypesField">
                            <div class="input-group">
                                @Html.HiddenFor(model => model.LeaveAppliedId)
                                @Html.LabelFor(model => model.LeaveType, "Leave Type", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.LeaveType, new { htmlAttributes = new { @class = "form-control col-md-12", @readonly = "readonly", required = "required", id = "ELeaveType" } })
                                    @Html.ValidationMessageFor(model => model.LeaveType, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="col-md-8" style="left:6vw;">

                        <div class="col-sm-6" style="left:7vw;">
                            <!-- checkbox -->          
                            <div class="input-group leaveform clearfix" id="EdayField">
                         
                                <label>
                                    Day Type
                                </label>
                                <div class="form-group clearfix">
                                    <div class="icheck-primary d-inline">
                                        <input type="checkbox" class="Eday-radio" id="EFull Day" value="Full Day" name="Day">
                                        <label for="EFull Day">
                                            Full Day
                                        </label>
                                    </div>
                                    <div class="icheck-primary d-inline">
                                        <input type="checkbox" class="Eday-radio" id="EHalf Day" value="Half Day" name="Day">
                                        <label for="EHalf Day">
                                            Half Day
                                        </label>
                                    </div>
                                    <div class="icheck-primary d-inline">
                                        <input type="checkbox" class="Eday-radio" id="EShort Leave" value="Short Leave" name="Day">
                                        <label for="EShort Leave">
                                            Short Leave
                                        </label>
                                    </div>
                                </div>
                            
                            </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-5">
                            <div class="input-group leaveform" id="EstartdateField">
                                @Html.LabelFor(model => model.StartDate, "Start Date", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8" style="left:-3vw;">

                                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datepicker col-md-12", min = DateTime.Now.ToString("yyyy-MM-dd"), required = "required", id = "Estartdate" } })

                                </div>
                            </div>
                        </div>
                        <div class="bootstrap-timepicker">
                            <div class="bootstrap-timepicker">
                                <div class="input-group mb-10 leaveform" style="margin-left:15px;" id="EstarttimeFields">
                                    <div class="col-md-3"style="left:7vw;">
                                        <label>Start Time</label>
                                    </div>
                                    <div class="col-md-6" style="margin-left:103px;">
                                        <div class="input-group date" data-target-input="nearest">
                                            <input type="text" name="StartTime" id="Etimepicker" class="form-control datetimepicker-input" data-target="#timepicker" required />
                                            <div class="input-group-append" data-target="#timepicker" data-toggle="datetimepicker">
                                                <div class="input-group-text"><i class="far fa-clock"></i></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
                <br />
                <br />
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-5">
                            <div class="input-group leaveform" id="EenddateField">
                                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8"style="left:-3vw;">

                                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control datepicker col-md-12", min = DateTime.Now.ToString("yyyy-MM-dd"), required = "required", id = "EendDate" } })

                                </div>
                            </div>
                        </div>
                        <div class="bootstrap-timepicker">
                            <div class="bootstrap-timepicker">
                                <div class="input-group mb-6 leaveform" style="margin-left:15px;" id="EendtimeFieldd">
                                    <div class="col-md-3" style="left:7vw;">
                                        <label>End Time </label>
                                    </div>
                                    <div class="col-md-6" style="margin-left:103px;">
                                        <div class="input-group date" data-target-input="nearest">
                                            <input type="text" name="EndTime" id="EEndtimepicker" class="form-control datetimepicker-input" data-target="#Endtimepicker" required />
                                            <div class="input-group-append" data-target="#Endtimepicker" data-toggle="datetimepicker">
                                                <div class="input-group-text"><i class="far fa-clock"></i></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <br />
                <br />
                <br />
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-5">
                            <div class="input-group leaveform" id="EnoofdaysField">
                                @Html.LabelFor(model => model.NoOfDays, "No of Days", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8"style="left:-3vw;">
                                    <input type="text" class="form-control col-md-12" name="NoOfDays" id="ENoOfDayss" readonly />
                                </div>
                            </div>

                        </div>
                        <div class="mb-15">
                            <div class="input-group leaveform" id="EleavelocationField" style="left: 8vw;">

                                @Html.LabelFor(model => model.LeaveLocation, "Location", htmlAttributes: new { @class = "control-label col-md-8" })

                                <div class="col-md-4"style="left: -7vw !important; width: 17vw!important ">
                                    @Html.EditorFor(model => model.LeaveLocation, new { htmlAttributes = new { @class = "form-control ", id = "ELeavelocation",  } } )
                                    @Html.ValidationMessageFor(model => model.LeaveLocation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <br />
                <br />
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-6">

                            <div class="input-group leaveform" id="EreasonField">
                                @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-8">
                                    <textarea name="Reason" class="form-control col-md-12" , required="required" id="Ereason"> </textarea>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="input-group leaveform" id="EuploaddocumentField">
                                @Html.LabelFor(model => model.UploadDocument, "Upload Documents")
                                <div class="col-md-6">
                                    <input type="file" name="UploadDocument" id="EDocuments" class="form-control" />
                                    @Html.ValidationMessageFor(model => model.UploadDocument)
                                    @Html.HiddenFor(model => model.Document)
                                    <button type="button" class="btn btn-primary btn-sm" name="Document" id="btnPreviewFile">View</button>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
                <br />
                <br />
                <br />
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="input-group leaveform" id="EuploaddocumentField">
                                @Html.LabelFor(model => model.Status, "Leave Status")
                                <div class="col-md-8">
                                    <select id="leaveStatus" name="StatusId" class="form-control">
                                        <option value=""> -- select -- </option>
                                        <option value="6"> Pending</option>
                                        <option value="58"> Cancel</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
               </div>

                <div class="col-md-12" style="top:22px;">
                    <div class="row">

                        <div class="col-md-8">
                            <div class="input-group justify-content-end " style="margin-top:10px; padding-right:40px;">
                                <div class="col-md-offset-2 col-md-2">
                                    <button type="button" class="btn btn-block bg-gradient-success btn-block" id="submit" onclick="applyConfirms(event)">Edit</button>
                                </div>
                                <div class="col-md-offset-2 col-md-2">

                                    <button type="button" class="btn btn-block bg-gradient-danger btn-block" onclick="resetForm()">Clear</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                </div>
             
            </div>



        }

        </div>

   
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }


        <script src="~/Content/plugins/daterangepicker/daterangepicker.js"></script>
        <link href="~/Content/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />
        <script src="~/Content/Admin/js/Icon.js"></script>
        <!-- Include SweetAlert CSS and JS files -->
                            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
                            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
                            <script src="~/Content/plugins/jquery-validation/jquery.validate.min.js"></script>

                            @*<script src="~/Scripts/jquery-3.4.1.min.js"></script>*@
<script>

                 function applyConfirms(event) {
                 console.log("Before validation");

                 // Prevent default form submission
                 event.preventDefault();
                 // 

                 // Validate fields before showing the confirmation dialog
                 var Llocation = $('#ELeavelocation').val();
                 var leaveId = $('#leaveId').val();
                 var dayType = 'Full Day'; //$('.Eday-radio:checked').val();
                 var LstartDate = $('#Estartdate').val();
                 var LstartTime = $('#Etimepicker').val();
                 var LendDate = $('#EendDate').val();
                 var LendTime = $('#EEndtimepicker').val();
                 var noofDays = $('#ENoOfDayss').val();
                 var Lreason = $('#Ereason').val();
                 var LeaveStatus = $('#leaveStatus').val();
                 //var LHolidayWorkedDate = $('#HolidayWorkedDate').val();

                 if ($('#HolidayWorkedDate').is(':visible')) {
                     // Check if any required field is empty
                     if (!LHolidayWorkedDate || !dayType || !LstartDate) {
                         // If any required field is empty, show an error message
                         Swal.fire({
                             title: 'Error',
                             text: 'All fields must be filled in.',
                             icon: 'error',
                             confirmButtonText: 'OK'
                         });
                         return false; // Prevent further execution and form submission
                     }
                 } else {
                     if (!dayType || !LstartDate || !LendDate || !noofDays || !LeaveStatus) {
                         // If any required field is empty, show an error message
                         Swal.fire({
                             title: 'Error',
                             text: 'All fields must be filled in.',
                             icon: 'error',
                             confirmButtonText: 'OK'
                         });
                         return false; // Prevent further execution and form submission
                     }
                 }

                 // If all required fields are filled, proceed to show the confirmation dialog
                 Swal.fire({
                     title: 'Are you sure you want to Edit leave?',
                     icon: 'warning',
                     showCancelButton: true,
                     confirmButtonText: 'Yes, apply!',
                     cancelButtonText: 'Cancel'
                 }).then((result) => {
                     if (result.isConfirmed) {
                         // User confirmed, submit the form with file data using FormData
                         var formData = new FormData($('#Eleaveform')[0]);
                         console.log("data recieved :"+formData)
                         var CompOffformData = new FormData($('#ComOffleaveform')[0]);
                          $.ajax({
                              type: 'POST',
                              url: '@Url.Action("EditLeaveAsyncAM", "Bind")',
                              data: formData,
                              contentType: false,
                              processData: false,

                              success: function (data) {
                                  // 
                                  displayToast('Leave Edited successfully!', 'success');
                                  $('#Eleaveform')[0].reset();
                                  $('.custom-file-label').html('Choose File'); // Reset the file input label text
                                  // Wait for the toast to be shown before redirecting
                                  setTimeout(function () {
                                      window.location.href = '/Counsellor/LeaveManagementAsyncAM'; // Replace '/home' with the URL you want to redirect to
                                  }, 2000); // Adjust the timeout value as needed
                                  $('#EApplyLeaveForm').hide();
                                                  },
                              error: function (error) {
                                  // Handle error
                                  Swal.fire({
                                      title: 'Error',
                                      text: 'An error occurred while applying for leave.',
                                      icon: 'error',
                                      confirmButtonText: 'OK'
                                  }).then(() => {
                                      // Redirect to the AddNewExamSNAsync action
                                      window.location.href = '@Url.Action("LeaveManagementAsyncAM", "Bind")';
                                  });
                              }
                          });


                     }
                 });

                 return false; // Prevent default form submission
                 }

              $(document).ready(function () {

                   setCheckboxBasedOnLeaveType('@Model.Day');

                  function setCheckboxBasedOnLeaveType(leaveType) {
                     //  
                      $('input.Eday-radio[value="' + leaveType + '"]').prop('checked', true);
                      calculateDays();
                  }


                  $('#btnPreviewFile').click(function () {
                       


                         var DocumentPath = '@Url.Content(Model.Document)';


                             if (DocumentPath.trim() !== '') {

                                 openLeaveDoc(DocumentPath);
                           
                             } else {

                                 toastr.error('Document not available.');
                             }
                        // }
                  });
                     function openLeaveDoc(DocumentPath) {
                         // 
                         // For a modal (using SweetAlert2):
                         Swal.fire({
                             title: 'Leave Document',
                             html: '<iframe src="' + DocumentPath + '" width="100%" height="600px"></iframe>',
                             showCloseButton: true,
                             showConfirmButton: false
                      });
                     }

                  function calculateDays() {
                      // 
                      const startDate = $('#Estartdate').val();
                     // const CompOffstartDate = $('#CompOffstartdate').val();
                      const endDate = $('#EendDate').val();
                     // const CompOffendDate = $('#CompOffendDate').val();
                      let totalDays = 0;
                      if ($('#EApplyLeaveForm').is(':visible')) {
                          if ($('.Eday-radio:checked').val() === 'Full Day') {
                              if (startDate && endDate) {
                                  totalDays = moment(endDate).diff(moment(startDate), 'days') + 1; // Including the start day
                              } else if (CompOffstartDate && CompOffendDate) {
                                  totalDays = moment(CompOffendDate).diff(moment(CompOffstartDate), 'days') + 1; // Including the start day
                              }
                          } else if ($('.Eday-radio:checked').val() === 'Half Day') {
                              totalDays = 0.5;
                              $('#EendDate').val(startDate);
                          } else if ($('.Eday-radio:checked').val() === 'Short Leave') {
                              totalDays = 0;
                              $('#EendDate').val(startDate);
                          }


                          $('#ENoOfDayss').val(totalDays);
                          console.log("Assigned to NoOfDays: ", $('#ENoOfDayss').val());
                          //return false;
                      }
                  }

                  $('.Eday-radio').change(function () {
                     //  
                      if ($(this).is(':checked')) {
                          $('.Eday-radio').not(this).prop('checked', false);
                      }
                      if ($(this).val() === 'Full Day') {
                          // Enable start and end date fields
                          $('#EstartdateField, #EenddateField').prop('disabled', false).show();
                          // Disable and hide time fields
                          $('#EstarttimeFields, #EendtimeFieldd').prop('disabled', true).hide();
                      } else {
                          // Show and enable all date and time fields
                          $('#EstartdateField, #EstarttimeFields, #EendtimeFieldd').prop('disabled', false).show();
                          // Hide the end date field input
                          $('#EenddateField').hide();
                      }
                      calculateDays();

                  });


                  $('#Estartdate, #EendDate, #CompOffendDate, #CompOffstartdate').change(function () {
                      calculateDays();
                  });

              });
</script>

</body>
</html>